{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ViewquotesComponent_div_16_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵlistener(\"click\", function ViewquotesComponent_div_16_ng_container_1_Template_div_click_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const quote_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.ViewQuote(quote_r1.ID));\n    });\n    i0.ɵɵelementStart(2, \"span\", 11)(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"span\", 12)(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"span\", 13)(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const quote_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(quote_r1.ID);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(quote_r1.CustName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(quote_r1.Status);\n  }\n}\nfunction ViewquotesComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ViewquotesComponent_div_16_ng_container_1_Template, 11, 3, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const quote_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSearched(quote_r1));\n  }\n}\nexport class ViewquotesComponent {\n  /***********************************************************\n  * Constructor.                                             *\n  ***********************************************************/\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    // Holds all quotes recieved from PHP.\n    this.Quotes = [];\n  }\n  /***********************************************************\n  * This function runs when the page initializes.            *\n  ***********************************************************/\n  ngOnInit() {\n    this.Datacheck();\n    this.FillPage();\n  }\n  /***********************************************************\n  * This function gets the quotes, which is filled in.       *\n  * the HTML                                                 *\n  ***********************************************************/\n  FillPage() {\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/viewquote/selectQuote.php').subscribe(response => {\n      this.Quotes = response;\n    });\n  }\n  /***********************************************************\n  * This function determines if a quote was searched. It is  *\n  * used in the HTML to display quotes if it returns true,   *\n  * and hides them if false.                                 *\n  ***********************************************************/\n  isSearched(quote) {\n    // Declare boolean; will be returned.\n    let isSearched = true;\n    // Check if SearchID is defined.\n    if (this.SearchID) {\n      // Create a string of the quote's id.\n      let IDString = quote['ID'];\n      // Check if the quote id doesn't contain the search id.\n      if (!IDString.includes(this.SearchID)) {\n        // Set isSearched to false.\n        isSearched = false;\n      }\n    }\n    // Check if SearchName is defined.\n    if (this.SearchName) {\n      // Declare a string of the quote customer and the search name.\n      let NameString = quote['CustName'];\n      let TempSearchName = this.SearchName;\n      // Check if quote's customer doesn't contain search name.\n      if (!NameString.toLowerCase().includes(TempSearchName.toLowerCase())) {\n        // Set isSearched to false.\n        isSearched = false;\n      }\n    }\n    // Similar to previous if statement.\n    if (this.SearchStatus) {\n      let StatusString = quote['Status'];\n      let TempStatusString = this.SearchStatus;\n      // Check if the Status matches the temp status.\n      if (StatusString != TempStatusString.toUpperCase()) {\n        isSearched = false;\n      }\n    }\n    return isSearched;\n  }\n  /***********************************************************\n  * This function navigates to the quote edit screen with    *\n  * the selected id.                                         *\n  ***********************************************************/\n  ViewQuote(id) {\n    this.router.navigate(['/quoteedit'], {\n      state: {\n        data: id\n      }\n    });\n  }\n  /**********************************************************\n  * This function will check to make sure a sales associate *\n  *   is properly logged in, and it will check if we have a *\n  *   current customer selected.                            *\n  **********************************************************/\n  Datacheck() {\n    //Stored Associate Name\n    var AssocName = localStorage.getItem('AssocName');\n    if (AssocName !== null) {\n      this.EmpName = JSON.parse(AssocName);\n    }\n    //Stored Admin Flag\n    var AdminFlag = localStorage.getItem('AdminFlag');\n    if (AdminFlag !== null) {\n      this.AdminFlag = JSON.parse(AdminFlag);\n    }\n    //Stored Associate ID\n    var savedAssoc = localStorage.getItem('CurrentAssoc');\n    if (savedAssoc !== null) {\n      this.savedAssoc = JSON.parse(savedAssoc);\n    } else {\n      this.router.navigateByUrl('/');\n      setTimeout(function () {\n        alert(\"Error: User not found, please Login\");\n      }, 200);\n    }\n  }\n}\n_class = ViewquotesComponent;\n_class.ɵfac = function ViewquotesComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-viewquotes\"]],\n  decls: 17,\n  vars: 4,\n  consts: [[1, \"search\"], [\"placeholder\", \"Search by ID\", \"type\", \"text\", 1, \"searchID\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Search by Name\", \"type\", \"text\", 1, \"searchName\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Search by Status\", \"type\", \"text\", 1, \"searchStatus\", 3, \"ngModel\", \"ngModelChange\"], [1, \"header\"], [1, \"hid\"], [1, \"hname\"], [1, \"hstatus\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"quote\", 3, \"click\"], [1, \"qid\"], [1, \"qname\"], [1, \"qstatus\"]],\n  template: function ViewquotesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"body\")(2, \"div\", 0)(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ViewquotesComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.SearchID = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ViewquotesComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.SearchName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ViewquotesComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.SearchStatus = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"h4\");\n      i0.ɵɵtext(9, \"Quote ID\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"h4\");\n      i0.ɵɵtext(12, \"Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 7)(14, \"h4\");\n      i0.ɵɵtext(15, \"Status\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(16, ViewquotesComponent_div_16_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.SearchID);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.SearchName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.SearchStatus);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Quotes);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"body[_ngcontent-%COMP%]{\\n    padding-bottom: 20%;\\n    padding-left: 5%;\\n    padding-right: 5%;\\n}\\n\\n.search[_ngcontent-%COMP%], .header[_ngcontent-%COMP%], .quote[_ngcontent-%COMP%], .quotenav[_ngcontent-%COMP%]{\\n    margin-left: 15px;\\n    padding: 5px;\\n    display:flex;\\n    align-content: space-between;\\n}\\n\\n.quote[_ngcontent-%COMP%]:hover{\\n    cursor: pointer;\\n}\\n\\n.search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n    border: 0;\\n    outline: 0;\\n    border-bottom: 3px solid lightgray;\\n\\n    color: lightgray;\\n    text-align: center;\\n\\n    margin: auto;\\n    display: block;\\n}\\n\\n.searchID[_ngcontent-%COMP%], .searchStatus[_ngcontent-%COMP%] {\\n    width: 20%;\\n}\\n\\n.searchName[_ngcontent-%COMP%] {\\n    width: 35%;\\n}\\n\\n.quotenav[_ngcontent-%COMP%]{\\n    justify-content: center;\\n}\\n\\n.hid[_ngcontent-%COMP%], .qid[_ngcontent-%COMP%]{\\n    width:30%;\\n}\\n.hname[_ngcontent-%COMP%], .qname[_ngcontent-%COMP%]{\\n    width:50%;\\n}\\n.hstatus[_ngcontent-%COMP%], .qstatus[_ngcontent-%COMP%]{\\n    width:20%;\\n}\\n\\n.qid[_ngcontent-%COMP%] {\\n    border-left: 4px solid lightgray;\\n    border-top: 4px solid lightgray;\\n    border-bottom: 4px solid lightgray;\\n\\n    border-top-left-radius: 20px;\\n    border-bottom-left-radius: 20px;\\n}\\n.qname[_ngcontent-%COMP%] {\\n    border-top: 4px solid lightgray;\\n    border-bottom: 4px solid lightgray;\\n}\\n\\n\\n.qstatus[_ngcontent-%COMP%] {\\n    border-right: 4px solid lightgray;\\n    border-top: 4px solid lightgray;\\n    border-bottom: 4px solid lightgray;\\n\\n    border-top-right-radius: 20px;\\n    border-bottom-right-radius: 20px;\\n}\\n\\n.qid[_ngcontent-%COMP%], .qname[_ngcontent-%COMP%], .qstatus[_ngcontent-%COMP%] {\\n    padding-left: 5px;\\n    padding-right: 5px;\\n    height:50px;\\n    line-height: 50px;\\n}\\n\\np[_ngcontent-%COMP%] {\\n    line-height: normal;\\n    display: inline-block;\\n    vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlld3F1b3Rlcy92aWV3cXVvdGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osWUFBWTtJQUNaLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxTQUFTO0lBQ1QsVUFBVTtJQUNWLGtDQUFrQzs7SUFFbEMsZ0JBQWdCO0lBQ2hCLGtCQUFrQjs7SUFFbEIsWUFBWTtJQUNaLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSx1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxTQUFTO0FBQ2I7QUFDQTtJQUNJLFNBQVM7QUFDYjtBQUNBO0lBQ0ksU0FBUztBQUNiOztBQUVBO0lBQ0ksZ0NBQWdDO0lBQ2hDLCtCQUErQjtJQUMvQixrQ0FBa0M7O0lBRWxDLDRCQUE0QjtJQUM1QiwrQkFBK0I7QUFDbkM7QUFDQTtJQUNJLCtCQUErQjtJQUMvQixrQ0FBa0M7QUFDdEM7OztBQUdBO0lBQ0ksaUNBQWlDO0lBQ2pDLCtCQUErQjtJQUMvQixrQ0FBa0M7O0lBRWxDLDZCQUE2QjtJQUM3QixnQ0FBZ0M7QUFDcEM7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLHNCQUFzQjtBQUMxQiIsInNvdXJjZXNDb250ZW50IjpbImJvZHl7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjAlO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA1JTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDUlO1xyXG59XHJcblxyXG4uc2VhcmNoLCAuaGVhZGVyLCAucXVvdGUsIC5xdW90ZW5hdntcclxuICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gICAgYWxpZ24tY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG5cclxuLnF1b3RlOmhvdmVye1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uc2VhcmNoIGlucHV0IHtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgbGlnaHRncmF5O1xyXG5cclxuICAgIGNvbG9yOiBsaWdodGdyYXk7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5zZWFyY2hJRCwgLnNlYXJjaFN0YXR1cyB7XHJcbiAgICB3aWR0aDogMjAlO1xyXG59XHJcblxyXG4uc2VhcmNoTmFtZSB7XHJcbiAgICB3aWR0aDogMzUlO1xyXG59XHJcblxyXG4ucXVvdGVuYXZ7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmhpZCwgLnFpZHtcclxuICAgIHdpZHRoOjMwJTtcclxufVxyXG4uaG5hbWUsIC5xbmFtZXtcclxuICAgIHdpZHRoOjUwJTtcclxufVxyXG4uaHN0YXR1cywgLnFzdGF0dXN7XHJcbiAgICB3aWR0aDoyMCU7XHJcbn1cclxuXHJcbi5xaWQge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCBsaWdodGdyYXk7XHJcbiAgICBib3JkZXItdG9wOiA0cHggc29saWQgbGlnaHRncmF5O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkIGxpZ2h0Z3JheTtcclxuXHJcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAyMHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMjBweDtcclxufVxyXG4ucW5hbWUge1xyXG4gICAgYm9yZGVyLXRvcDogNHB4IHNvbGlkIGxpZ2h0Z3JheTtcclxuICAgIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCBsaWdodGdyYXk7XHJcbn1cclxuXHJcblxyXG4ucXN0YXR1cyB7XHJcbiAgICBib3JkZXItcmlnaHQ6IDRweCBzb2xpZCBsaWdodGdyYXk7XHJcbiAgICBib3JkZXItdG9wOiA0cHggc29saWQgbGlnaHRncmF5O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkIGxpZ2h0Z3JheTtcclxuXHJcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMjBweDtcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAyMHB4O1xyXG59XHJcblxyXG4ucWlkLCAucW5hbWUsIC5xc3RhdHVzIHtcclxuICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogNXB4O1xyXG4gICAgaGVpZ2h0OjUwcHg7XHJcbiAgICBsaW5lLWhlaWdodDogNTBweDtcclxufVxyXG5cclxucCB7XHJcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","ViewquotesComponent_div_16_ng_container_1_Template_div_click_1_listener","ɵɵrestoreView","_r5","quote_r1","ɵɵnextContext","$implicit","ctx_r3","ɵɵresetView","ViewQuote","ID","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate","CustName","Status","ɵɵtemplate","ViewquotesComponent_div_16_ng_container_1_Template","ɵɵproperty","ctx_r0","isSearched","ViewquotesComponent","constructor","http","router","Quotes","ngOnInit","Datacheck","FillPage","get","subscribe","response","quote","SearchID","IDString","includes","SearchName","NameString","TempSearchName","toLowerCase","SearchStatus","StatusString","TempStatusString","toUpperCase","id","navigate","state","data","AssocName","localStorage","getItem","EmpName","JSON","parse","AdminFlag","savedAssoc","navigateByUrl","setTimeout","alert","ɵɵdirectiveInject","i1","HttpClient","i2","Router","selectors","decls","vars","consts","template","ViewquotesComponent_Template","rf","ctx","ViewquotesComponent_Template_input_ngModelChange_3_listener","$event","ViewquotesComponent_Template_input_ngModelChange_4_listener","ViewquotesComponent_Template_input_ngModelChange_5_listener","ViewquotesComponent_div_16_Template"],"sources":["C:\\Users\\ledon\\Desktop\\CSCI467-Group-Project\\src\\app\\viewquotes\\viewquotes.component.ts","C:\\Users\\ledon\\Desktop\\CSCI467-Group-Project\\src\\app\\viewquotes\\viewquotes.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router, NavigationEnd,ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-viewquotes',\r\n  templateUrl: './viewquotes.component.html',\r\n  styleUrls: ['./viewquotes.component.css']\r\n})\r\nexport class ViewquotesComponent {\r\n\r\n  // Holds all quotes recieved from PHP.\r\n  Quotes: any[] = [];\r\n\r\n  // Search terms.\r\n  SearchID: any;\r\n  SearchName: any;\r\n  SearchStatus: any;\r\n\r\n  // Vars for DataCheck()\r\n  EmpName: any;\r\n  savedAssoc: any;\r\n  AdminFlag: any;\r\n\r\n  /***********************************************************\r\n  * Constructor.                                             *\r\n  ***********************************************************/\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  /***********************************************************\r\n  * This function runs when the page initializes.            *\r\n  ***********************************************************/\r\n  ngOnInit() {\r\n    this.Datacheck();\r\n\r\n    this.FillPage();\r\n  }\r\n\r\n  /***********************************************************\r\n  * This function gets the quotes, which is filled in.       *\r\n  * the HTML                                                 *\r\n  ***********************************************************/\r\n  FillPage() {\r\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/viewquote/selectQuote.php').subscribe((response: any) => {\r\n      this.Quotes = response;\r\n    });\r\n  }\r\n\r\n  /***********************************************************\r\n  * This function determines if a quote was searched. It is  *\r\n  * used in the HTML to display quotes if it returns true,   *\r\n  * and hides them if false.                                 *\r\n  ***********************************************************/\r\n  isSearched(quote: any) {\r\n    // Declare boolean; will be returned.\r\n    let isSearched: boolean = true;\r\n\r\n    // Check if SearchID is defined.\r\n    if (this.SearchID)\r\n    {\r\n      // Create a string of the quote's id.\r\n      let IDString: string = quote['ID'];\r\n      // Check if the quote id doesn't contain the search id.\r\n      if(!IDString.includes(this.SearchID))\r\n      {\r\n        // Set isSearched to false.\r\n        isSearched = false;\r\n      }\r\n    }\r\n\r\n    // Check if SearchName is defined.\r\n    if (this.SearchName)\r\n    {\r\n      // Declare a string of the quote customer and the search name.\r\n      let NameString: string = quote['CustName'];\r\n      let TempSearchName: string = this.SearchName;\r\n\r\n      // Check if quote's customer doesn't contain search name.\r\n      if(!NameString.toLowerCase().includes(TempSearchName.toLowerCase()))\r\n      {\r\n        // Set isSearched to false.\r\n        isSearched = false;\r\n      }\r\n    }\r\n\r\n    // Similar to previous if statement.\r\n    if (this.SearchStatus)\r\n    {\r\n      let StatusString: string = quote['Status'];\r\n      let TempStatusString: string = this.SearchStatus;\r\n\r\n      // Check if the Status matches the temp status.\r\n      if (StatusString != TempStatusString.toUpperCase())\r\n      {\r\n        isSearched = false;\r\n      }\r\n    }\r\n\r\n    return isSearched;\r\n  }\r\n\r\n  /***********************************************************\r\n  * This function navigates to the quote edit screen with    *\r\n  * the selected id.                                         *\r\n  ***********************************************************/\r\n  ViewQuote(id: number) {\r\n    this.router.navigate(['/quoteedit'], {state: {data: id}});\r\n  }\r\n\r\n  /**********************************************************\r\n  * This function will check to make sure a sales associate *\r\n  *   is properly logged in, and it will check if we have a *\r\n  *   current customer selected.                            *\r\n  **********************************************************/\r\n  Datacheck(): void{\r\n    //Stored Associate Name\r\n    var AssocName = localStorage.getItem('AssocName');\r\n    if(AssocName !== null){\r\n      this.EmpName = JSON.parse(AssocName);\r\n    }\r\n\r\n    //Stored Admin Flag\r\n    var AdminFlag = localStorage.getItem('AdminFlag');\r\n    if(AdminFlag !== null){\r\n      this.AdminFlag = JSON.parse(AdminFlag);\r\n    }\r\n  \r\n    //Stored Associate ID\r\n    var savedAssoc = localStorage.getItem('CurrentAssoc');\r\n    if(savedAssoc !== null){\r\n      this.savedAssoc = JSON.parse(savedAssoc);\r\n    }else{\r\n      this.router.navigateByUrl('/');\r\n      setTimeout(function(){\r\n        alert(\"Error: User not found, please Login\");\r\n      }, 200);\r\n    }\r\n  }\r\n}\r\n","<html>\r\n  <body>\r\n    <div class=\"search\">\r\n        <input class=\"searchID\" placeholder=\"Search by ID\" type=\"text\" [(ngModel)]=\"SearchID\"/>\r\n        <input class=\"searchName\" placeholder=\"Search by Name\" type=\"text\" [(ngModel)]=\"SearchName\"/>\r\n        <input class=\"searchStatus\" placeholder=\"Search by Status\" type=\"text\" [(ngModel)]=\"SearchStatus\"/>\r\n    </div>\r\n\r\n    <div class=\"header\">\r\n        <div class=\"hid\">\r\n            <h4>Quote ID</h4>\r\n        </div>\r\n\r\n        <div class=\"hname\">\r\n            <h4>Name</h4>\r\n        </div>\r\n\r\n        <div class=\"hstatus\">\r\n            <h4>Status</h4>\r\n        </div>\r\n  </div>\r\n\r\n\r\n  <div *ngFor=\"let quote of Quotes\">\r\n    <ng-container *ngIf=\"isSearched(quote)\">\r\n      <div class=\"quote\" (click)=\"ViewQuote(quote.ID)\">\r\n        <span class=\"qid\">\r\n          <p>{{quote.ID}}</p>\r\n        </span>\r\n\r\n        <span class=\"qname\">\r\n          <p>{{quote.CustName}}</p>\r\n        </span>\r\n        \r\n        <span class=\"qstatus\">\r\n          <p>{{quote.Status}}</p>\r\n        </span>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n\r\n  </body>\r\n</html>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}