{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\nexport let QuoteeditComponent = class QuoteeditComponent {\n  constructor(http, router, formBuilder, cd) {\n    this.http = http;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.cd = cd;\n    this.selectedID = 0;\n    this.selectedQuote = [];\n    this.selectedQuoteLines = [];\n    this.showSecretNote = false;\n    this.total = 0.0;\n    this.quoteUrl = 'https://phpapicsci467.azurewebsites.net/php_script/FinalizeQuote.php';\n    this.quoteForm = this.formBuilder.group({\n      rows: this.formBuilder.array([\n        //this.createRow()\n      ])\n    });\n    this.selectedID = history.state.data;\n  }\n  ngOnInit() {\n    let params = new HttpParams();\n    params = params.append('whereTerm', \"ID\");\n    params = params.append('whereValue', this.selectedID);\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/selectQuoteWhere.php', {\n      params\n    }).subscribe(response => {\n      this.selectedQuote = response;\n    });\n    params = params.delete('whereTerm');\n    params = params.append('whereTerm', \"QuoteID\");\n    //   params = params.append('whereValue', this.selectedID);\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/selectQuoteLineWhere.php', {\n      params\n    }).subscribe(response => {\n      this.selectedQuoteLines = response;\n      this.fillRows();\n    });\n    console.log(history.state);\n  }\n  get rowControls() {\n    return this.quoteForm.get('rows').controls;\n  }\n  get secretControls() {\n    return this.quoteForm.get('secrets').controls;\n  }\n  /* This function will add another row to the current Quote */\n  addRow() {\n    const newRow = this.formBuilder.group({\n      Item: '',\n      Qty: 0,\n      Price: 0.0\n    });\n    this.calculateRunningTotal();\n    this.quoteForm.get('rows').push(newRow);\n  }\n  fillRows() {\n    for (let line of this.selectedQuoteLines) {\n      if (line['SecretFlag'] == 'N') {\n        this.populateRow(line);\n      } else {\n        this.populateSecretNote(line);\n      }\n    }\n    this.calculateRunningTotal();\n  }\n  populateRow(line) {\n    const newRow = this.formBuilder.group({\n      Item: line['RowDesc'],\n      Qty: line['RowQty'],\n      Price: line['RowPrice']\n    });\n    this.quoteForm.get('rows').push(newRow);\n    this.calculateRunningTotal();\n  }\n  populateSecretNote(line) {\n    this.showSecretNote = true;\n    const newRow = this.formBuilder.group({\n      SecretNote: line['RowDesc']\n    });\n    this.quoteForm.get('secrets').push(newRow);\n  }\n  createRow() {\n    return this.formBuilder.group({\n      Item: '',\n      Qty: 0,\n      Price: 0.0\n    });\n  }\n  /* **********************************************************\n   * This function will aquire the customer that was selected *\n   *   and store it for later use.                            *\n   * **********************************************************/\n  RetriveCustomer() {\n    //this.CustName = this.selectOptions[this.SelectedVal-1].name;\n    localStorage.setItem('CurrentCustomer', this.SelectedVal);\n    localStorage.setItem('CurrentCustomerName', this.CustName);\n    console.log(this.SelectedVal);\n    console.log(this.CustName);\n  }\n  AddNote() {\n    this.showSecretNote = !this.showSecretNote;\n  }\n  /* **********************************************\n   * This function will calculate the Quote Total *\n   * **********************************************/\n  calculateRunningTotal() {\n    const rows = this.quoteForm.get('rows');\n    for (let i = 0; i < rows.length; i++) {\n      const row = rows.at(i);\n      if (row) {\n        const qtyControl = row.get('Qty');\n        const priceControl = row.get('Price');\n        if (qtyControl && priceControl) {\n          const qty = qtyControl.value;\n          const price = priceControl.value;\n          this.total += qty * price;\n          this.cd.markForCheck();\n        }\n      }\n    }\n  }\n  QuoteFinish() {\n    if (this.CustName == null && this.SelectedVal == null) {\n      alert(\"No customer selected, please select a customer and try again!\");\n    } else {\n      this.calculateRunningTotal();\n      const formData = this.quoteForm.value;\n      const FinalformData = {\n        formData,\n        AssocID: this.savedAssoc,\n        CustID: this.SelectedVal,\n        CustomerName: this.CustName,\n        QuoteTotal: this.total\n      };\n      this.http.post(this.quoteUrl, FinalformData).subscribe({\n        next: data => {\n          // Handle the data\n          alert(\"Quote Submitted!\");\n          localStorage.removeItem('CurrentCustomer');\n          localStorage.removeItem('CurrentCustomerName');\n          location.reload();\n        },\n        error: error => {\n          console.error('Error saving data', error);\n        }\n      });\n    }\n  }\n  DeleteQuote(event) {\n    console.log(event);\n  }\n};\nQuoteeditComponent = __decorate([Component({\n  selector: 'app-quoteedit',\n  templateUrl: './quoteedit.component.html',\n  styleUrls: ['./quoteedit.component.css']\n})], QuoteeditComponent);","map":{"version":3,"names":["Component","HttpParams","QuoteeditComponent","constructor","http","router","formBuilder","cd","selectedID","selectedQuote","selectedQuoteLines","showSecretNote","total","quoteUrl","quoteForm","group","rows","array","history","state","data","ngOnInit","params","append","get","subscribe","response","delete","fillRows","console","log","rowControls","controls","secretControls","addRow","newRow","Item","Qty","Price","calculateRunningTotal","push","line","populateRow","populateSecretNote","SecretNote","createRow","RetriveCustomer","localStorage","setItem","SelectedVal","CustName","AddNote","i","length","row","at","qtyControl","priceControl","qty","value","price","markForCheck","QuoteFinish","alert","formData","FinalformData","AssocID","savedAssoc","CustID","CustomerName","QuoteTotal","post","next","removeItem","location","reload","error","DeleteQuote","event","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ledon\\Desktop\\CSCI467-Group-Project\\src\\app\\quoteedit\\quoteedit.component.ts"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef} from '@angular/core';\r\nimport { HttpClient, HttpParams} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, FormArray} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-quoteedit',\r\n  templateUrl: './quoteedit.component.html',\r\n  styleUrls: ['./quoteedit.component.css']\r\n})\r\n\r\n\r\nexport class QuoteeditComponent {\r\n  responseFromPHP: any;\r\n  selectedID: number = 0;\r\n  selectedQuote: any[] = [];\r\n  selectedQuoteLines: any[] = [];\r\n\r\n  SelectedVal: any;\r\n  CustName: any;\r\n  EmpName: any;\r\n  savedAssoc: any;\r\n\r\n  quoteForm: FormGroup;\r\n  showSecretNote: boolean = false;\r\n  total: number = 0.0;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private formBuilder: FormBuilder, private cd: ChangeDetectorRef) {\r\n  \r\n    this.quoteForm = this.formBuilder.group({\r\n      rows: this.formBuilder.array([\r\n        //this.createRow()\r\n      ])\r\n    });\r\n\r\n    this.selectedID = history.state.data;\r\n  }\r\n\r\n  ngOnInit() {\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('whereTerm', \"ID\");\r\n    params = params.append('whereValue', this.selectedID);\r\n\r\n\r\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/selectQuoteWhere.php', {params}).subscribe((response: any) => {\r\n      this.selectedQuote = response;\r\n    });\r\n\r\n    params = params.delete('whereTerm');\r\n    params = params.append('whereTerm', \"QuoteID\");\r\n //   params = params.append('whereValue', this.selectedID);\r\n\r\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/selectQuoteLineWhere.php', {params}).subscribe((response: any) => {\r\n      this.selectedQuoteLines = response;\r\n      this.fillRows();\r\n    });\r\n\r\n    console.log(history.state);\r\n  }\r\n  \r\n\r\n  get rowControls() {\r\n    return (this.quoteForm.get('rows') as FormArray).controls;\r\n  }\r\n\r\n  get secretControls() {\r\n    return (this.quoteForm.get('secrets') as FormArray).controls;\r\n  }\r\n\r\n  /* This function will add another row to the current Quote */\r\n  addRow() {\r\n    const newRow = this.formBuilder.group({\r\n      Item: '',\r\n      Qty: 0,\r\n      Price: 0.0,\r\n    });\r\n    this.calculateRunningTotal();\r\n    (this.quoteForm.get('rows') as FormArray).push(newRow);\r\n  }\r\n\r\n  fillRows() {\r\n    for (let line of this.selectedQuoteLines) {\r\n      if (line['SecretFlag'] == 'N')\r\n      {\r\n        this.populateRow(line);\r\n      }\r\n      else\r\n      {\r\n        this.populateSecretNote(line);\r\n      }\r\n    }\r\n    this.calculateRunningTotal();\r\n  }\r\n\r\n  populateRow(line: any) {\r\n    const newRow = this.formBuilder.group({\r\n      Item: line['RowDesc'],\r\n      Qty: line['RowQty'],\r\n      Price: line['RowPrice'],\r\n    });\r\n    (this.quoteForm.get('rows') as FormArray).push(newRow);\r\n    this.calculateRunningTotal();\r\n  }\r\n\r\n  populateSecretNote(line:any) {\r\n    this.showSecretNote = true;\r\n    const newRow = this.formBuilder.group({\r\n      SecretNote: line['RowDesc'],\r\n    });\r\n    (this.quoteForm.get('secrets') as FormArray).push(newRow);\r\n  }\r\n\r\n  private createRow() {\r\n    return this.formBuilder.group({\r\n      Item: '',\r\n      Qty: 0,\r\n      Price: 0.0,\r\n    });\r\n  }\r\n\r\n\r\n  /* **********************************************************\r\n   * This function will aquire the customer that was selected *\r\n   *   and store it for later use.                            *\r\n   * **********************************************************/\r\n  RetriveCustomer() : void{\r\n    //this.CustName = this.selectOptions[this.SelectedVal-1].name;\r\n    localStorage.setItem('CurrentCustomer',this.SelectedVal);\r\n    localStorage.setItem('CurrentCustomerName',this.CustName);\r\n    console.log(this.SelectedVal);\r\n    console.log(this.CustName);\r\n  }\r\n\r\n\r\n  AddNote() : void{\r\n    this.showSecretNote = !this.showSecretNote;\r\n  }\r\n\r\n  /* **********************************************\r\n   * This function will calculate the Quote Total *\r\n   * **********************************************/\r\n  calculateRunningTotal() {\r\n    const rows = this.quoteForm.get('rows') as FormArray;\r\n  \r\n    for (let i = 0; i < rows.length; i++) {\r\n      const row = rows.at(i);\r\n      if (row) {\r\n        const qtyControl = row.get('Qty');\r\n        const priceControl = row.get('Price');\r\n  \r\n        if (qtyControl && priceControl) {\r\n          const qty = qtyControl.value;\r\n          const price = priceControl.value;\r\n          this.total += qty * price;\r\n          this.cd.markForCheck();\r\n        }\r\n      }\r\n    }\r\n  \r\n  }\r\n\r\n  private quoteUrl = 'https://phpapicsci467.azurewebsites.net/php_script/FinalizeQuote.php';\r\n  QuoteFinish() : any{\r\n    if(this.CustName == null && this.SelectedVal == null){\r\n      alert(\"No customer selected, please select a customer and try again!\");\r\n    }else{\r\n      this.calculateRunningTotal();\r\n      const formData = this.quoteForm.value;\r\n      const FinalformData = {\r\n        formData,\r\n        AssocID: this.savedAssoc,\r\n        CustID: this.SelectedVal,\r\n        CustomerName: this.CustName,\r\n        QuoteTotal: this.total\r\n      };\r\n  \r\n      this.http.post(this.quoteUrl, FinalformData).subscribe({        \r\n        next: (data: any) => {\r\n        // Handle the data\r\n        alert(\"Quote Submitted!\");\r\n        localStorage.removeItem('CurrentCustomer');\r\n        localStorage.removeItem('CurrentCustomerName');\r\n        location.reload();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error saving data', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  DeleteQuote(event: Event): void{\r\n\r\n    console.log(event);\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}