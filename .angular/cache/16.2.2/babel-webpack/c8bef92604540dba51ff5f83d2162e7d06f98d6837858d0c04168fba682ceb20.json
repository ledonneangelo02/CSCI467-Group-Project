{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"container\"];\nconst _c1 = [\"SecretNote\"];\nfunction QuoteComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r3.name);\n  }\n}\n/* *****************************************************************\n * This is the QuoteComponent, it is responsible for the interface *\n *  that allows a sales associate to make a quote                  *\n * *****************************************************************/\nexport class QuoteComponent {\n  constructor(renderer, http, router, formBuilder) {\n    this.renderer = renderer;\n    this.http = http;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.selectOptions = [];\n    //Number of rows in the quote\n    this.count = 1;\n    //We only want 1 Secret Note per Quote\n    this.NoteCount = 0;\n    this.quoteForm = this.formBuilder.group({\n      rows: this.formBuilder.array([])\n    });\n  }\n  ngOnInit() {\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/Customers.php').subscribe(response => {\n      this.selectOptions = response;\n    });\n    this.quoteForm = this.fb.group({\n      Id: [],\n      quote_data: this.fb.array([this.fb.group({\n        point: ''\n      })])\n    });\n    var CustomerSelect = localStorage.getItem('CurrentCustomer');\n    if (CustomerSelect !== null) {\n      this.SelectedVal = JSON.parse(CustomerSelect);\n      console.log(this.SelectedVal);\n    }\n    var AssocName = localStorage.getItem('AssocName');\n    if (AssocName !== null) {\n      this.EmpName = JSON.parse(AssocName);\n    }\n    var savedAssoc = localStorage.getItem('CurrentAssoc');\n    if (savedAssoc !== null) {\n      savedAssoc = JSON.parse(savedAssoc);\n      console.log(savedAssoc);\n    } else {\n      this.router.navigateByUrl('/');\n      setTimeout(function () {\n        alert(\"Error: User not found, please Login\");\n      }, 200);\n    }\n  }\n  get quoteData() {\n    return this.quoteForm.get('quota_data');\n  }\n  /* This function will Add another row to the current Quote */\n  AddRow() {\n    //HTML content for adding another row to the quote\n    var htmlContent = `<div class=\"col col-lg\"> \n                          <div class=\"p-3 border bg-dark\"><input style=\"width: 100%;\" [(ngModel)]=\"QuoteRow[${this.count}].Item\" [id]=\"Item${this.count}\" type=\"text\"></div> \n                          </div> \n                          <div class=\"col col-md-auto\"> \n                              <div class=\"p-3 border bg-dark\"><input [(ngModel)]=\"QuoteRow[${this.count}].Qty\" [id]=\"Qty${this.count}\" type=\"number\"></div>\n                          </div> \n                          <div class=\"col col-md-auto\"> \n                              <div class=\" p-3 border bg-dark\"><input [(ngModel)]=\"QuoteRow[${this.count}].Price\" [id]=\"Price${this.count}\" type=\"number\" step=\"0.01\"></div> \n                          </div>\n                       </div>`;\n    //Creating the Seperating Line\n    const newElement = this.renderer.createElement('hr');\n    newElement.style.borderWidth = '5px';\n    newElement.style.color = 'rgb(0,0,0)';\n    newElement.style.backgroundColor = 'black';\n    //Creating the new Quote Row\n    const newElement2 = this.renderer.createElement('div');\n    newElement2.className = 'row';\n    newElement2.innerHTML = htmlContent;\n    // Append the new element as the last child of the div\n    this.renderer.appendChild(this.container.nativeElement, newElement);\n    this.renderer.appendChild(this.container.nativeElement, newElement2);\n    this.count++;\n  }\n  RetriveData() {\n    console.log(this.SelectedVal);\n    localStorage.setItem('CurrentCustomer', this.SelectedVal);\n  }\n  AddNote() {\n    if (this.NoteCount == 0) {\n      var htmlContent = `<div class=\"col col-lg\"> \n                            <h4>Secret Note</h4>\n                            <div class=\"p-3 border bg-dark\"><input style=\"width:100%;\" id=\"SecretNote\" type=\"text\"></div>\n                          </div>`;\n      //Creating a 'Secret Note'\n      const SecretNote = this.renderer.createElement('div');\n      SecretNote.className = 'row';\n      SecretNote.innerHTML = htmlContent;\n      //Creating the Seperating Line\n      const newElement = this.renderer.createElement('hr');\n      newElement.style.borderWidth = '10px';\n      newElement.style.color = 'rgb(0,0,0)';\n      newElement.style.backgroundColor = 'black';\n      this.renderer.appendChild(this.SecretNote.nativeElement, newElement);\n      this.renderer.appendChild(this.SecretNote.nativeElement, SecretNote);\n      ++this.NoteCount;\n    } else {\n      alert(\"There is already a Secret Note, on this Quote\");\n    }\n  }\n  QuoteFinish() {\n    for (let i = 0; i < this.count; i++) {\n      const inputId = `Item${i}`;\n      const inputValue = this.container.nativeElement.querySelector(`#${inputId}`).value;\n      console.log(`Value of input with ID ${inputId}: ${inputValue}`);\n    }\n  }\n}\n_class = QuoteComponent;\n_class.ɵfac = function QuoteComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-quote\"]],\n  viewQuery: function QuoteComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.SecretNote = _t.first);\n    }\n  },\n  decls: 49,\n  vars: 8,\n  consts: [[1, \"Greeting\"], [1, \"SelectCustomer\"], [1, \"item\"], [1, \"item2\", 3, \"ngModel\", \"ngModelChange\"], [\"disabled\", \"\", \"hidden\", \"\", 3, \"ngValue\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\"], [\"formControlName\", \"Id\"], [\"formControlName\", \"point\"], [\"container\", \"\"], [1, \"row\"], [1, \"col\", \"col-lg\"], [1, \"p-3\", \"border\", \"bg-dark\"], [\"id\", \"Item0\", \"type\", \"text\", 1, \"QuoteRow[0].Item\", 2, \"width\", \"100%\"], [1, \"col\", \"col-md-auto\"], [\"id\", \"Qty0\", \"type\", \"number\", 1, \"QuoteRow[0].Qty\"], [\"id\", \"Price0\", \"type\", \"number\", \"step\", \"0.01\", 1, \"QuoteRow[0].Price\"], [\"SecretNote\", \"\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"value\"]],\n  template: function QuoteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"body\")(2, \"div\", 0)(3, \"h1\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"h3\", 2);\n      i0.ɵɵtext(7, \"Select A Customer:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_select_ngModelChange_8_listener($event) {\n        return ctx.SelectedVal = $event;\n      })(\"ngModelChange\", function QuoteComponent_Template_select_ngModelChange_8_listener() {\n        return ctx.RetriveData();\n      });\n      i0.ɵɵelementStart(9, \"option\", 4);\n      i0.ɵɵtext(10, \"Select a Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, QuoteComponent_option_11_Template, 2, 2, \"option\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"form\", 6)(13, \"label\");\n      i0.ɵɵtext(14, \" Title: \");\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"h2\");\n      i0.ɵɵtext(17, \"Selling Points\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"label\");\n      i0.ɵɵtext(19, \" Selling Point: \");\n      i0.ɵɵelement(20, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(21);\n      i0.ɵɵpipe(22, \"json\");\n      i0.ɵɵelementStart(23, \"div\", null, 9)(25, \"div\", 10)(26, \"div\", 11)(27, \"h4\");\n      i0.ɵɵtext(28, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 12);\n      i0.ɵɵelement(30, \"input\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 14)(32, \"h4\");\n      i0.ɵɵtext(33, \"Qty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 12);\n      i0.ɵɵelement(35, \"input\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\", 14)(37, \"h4\");\n      i0.ɵɵtext(38, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"div\", 12);\n      i0.ɵɵelement(40, \"input\", 16);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(41, \"div\", null, 17);\n      i0.ɵɵelementStart(43, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function QuoteComponent_Template_button_click_43_listener() {\n        return ctx.AddRow();\n      });\n      i0.ɵɵtext(44, \"Add Row\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function QuoteComponent_Template_button_click_45_listener() {\n        return ctx.AddNote();\n      });\n      i0.ɵɵtext(46, \"Add Secret Note\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function QuoteComponent_Template_button_click_47_listener() {\n        return ctx.QuoteFinish();\n      });\n      i0.ɵɵtext(48, \"Submit Quote\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Hello \", ctx.EmpName, \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.SelectedVal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngValue\", undefined);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.selectOptions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.quoteForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(22, 6, ctx.quoteForm.value), \" \");\n    }\n  },\n  dependencies: [i4.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i4.JsonPipe],\n  styles: [\"#Item1[_ngcontent-%COMP%] {\\n    width: 100%;\\n\\n}\\n\\n#Qty[_ngcontent-%COMP%]{\\n    width:60px;\\n}\\n\\n#Price[_ngcontent-%COMP%]{\\n    width:80px;\\n}\\nbody[_ngcontent-%COMP%]{\\n    padding-bottom: 20%;\\n    padding-left: 5%;\\n    padding-right: 5%;\\n}\\n\\n.SelectCustomer[_ngcontent-%COMP%]{\\n    display:inline-flex;\\n    justify-content: space-between;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXVvdGUvcXVvdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxXQUFXOztBQUVmOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksVUFBVTtBQUNkO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQiw4QkFBOEI7QUFDbEMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuI0l0ZW0xIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxufVxyXG5cclxuI1F0eXtcclxuICAgIHdpZHRoOjYwcHg7XHJcbn1cclxuXHJcbiNQcmljZXtcclxuICAgIHdpZHRoOjgwcHg7XHJcbn1cclxuYm9keXtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyMCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDUlO1xyXG4gICAgcGFkZGluZy1yaWdodDogNSU7XHJcbn1cclxuXHJcbi5TZWxlY3RDdXN0b21lcntcclxuICAgIGRpc3BsYXk6aW5saW5lLWZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r3","id","ɵɵadvance","ɵɵtextInterpolate","name","QuoteComponent","constructor","renderer","http","router","formBuilder","selectOptions","count","NoteCount","quoteForm","group","rows","array","ngOnInit","get","subscribe","response","fb","Id","quote_data","point","CustomerSelect","localStorage","getItem","SelectedVal","JSON","parse","console","log","AssocName","EmpName","savedAssoc","navigateByUrl","setTimeout","alert","quoteData","AddRow","htmlContent","newElement","createElement","style","borderWidth","color","backgroundColor","newElement2","className","innerHTML","appendChild","container","nativeElement","RetriveData","setItem","AddNote","SecretNote","QuoteFinish","i","inputId","inputValue","querySelector","value","ɵɵdirectiveInject","Renderer2","i1","HttpClient","i2","Router","i3","FormBuilder","selectors","viewQuery","QuoteComponent_Query","rf","ctx","ɵɵlistener","QuoteComponent_Template_select_ngModelChange_8_listener","$event","ɵɵtemplate","QuoteComponent_option_11_Template","ɵɵelement","QuoteComponent_Template_button_click_43_listener","QuoteComponent_Template_button_click_45_listener","QuoteComponent_Template_button_click_47_listener","ɵɵtextInterpolate1","undefined","ɵɵpipeBind1"],"sources":["C:\\Users\\ledon\\Desktop\\CSCI467-Group-Project\\src\\app\\quote\\quote.component.ts","C:\\Users\\ledon\\Desktop\\CSCI467-Group-Project\\src\\app\\quote\\quote.component.html"],"sourcesContent":["import { Component, ElementRef, Renderer2, ViewChild, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, NavigationEnd,ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\r\nimport { Quote, QuoteData} from '../quote';\r\n\r\n@Component({\r\n  selector: 'app-quote',\r\n  templateUrl: './quote.component.html',\r\n  styleUrls: ['./quote.component.css'],\r\n\r\n})\r\n\r\n/* ***************************************************************** \r\n * This is the QuoteComponent, it is responsible for the interface *\r\n *  that allows a sales associate to make a quote                  *\r\n * *****************************************************************/\r\nexport class QuoteComponent implements OnInit{\r\n\r\n  responseFromPHP: any;\r\n  selectOptions: any[] = [];\r\n  SelectedVal: any;\r\n  EmpName: any;\r\n  quoteForm: FormGroup;\r\n\r\n  constructor(private renderer: Renderer2, private http: HttpClient, private router: Router, private formBuilder: FormBuilder) {\r\n    this.quoteForm = this.formBuilder.group({\r\n      rows: this.formBuilder.array([]),\r\n    });\r\n  }\r\n\r\n  @ViewChild('container', { static: true }) container!: ElementRef;\r\n  @ViewChild('SecretNote', { static: true }) SecretNote!: ElementRef;\r\n  \r\n  ngOnInit() {\r\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/Customers.php').subscribe((response: any) => {\r\n      this.selectOptions = response;\r\n    });\r\n\r\n    this.quoteForm = this.fb.group({\r\n      Id: [],\r\n      quote_data: this.fb.array([this.fb.group({point:''})])\r\n    });\r\n\r\n    var CustomerSelect = localStorage.getItem('CurrentCustomer');\r\n    if(CustomerSelect !== null){\r\n      this.SelectedVal = JSON.parse(CustomerSelect);\r\n      console.log(this.SelectedVal);\r\n    }\r\n    var AssocName = localStorage.getItem('AssocName');\r\n    if(AssocName !== null){\r\n      this.EmpName = JSON.parse(AssocName);\r\n    }\r\n    var savedAssoc = localStorage.getItem('CurrentAssoc');\r\n    if(savedAssoc !== null){\r\n      savedAssoc = JSON.parse(savedAssoc);\r\n      console.log(savedAssoc);\r\n    }else{\r\n      this.router.navigateByUrl('/');\r\n      setTimeout(function(){\r\n        alert(\"Error: User not found, please Login\");\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  get quoteData(){\r\n    return this.quoteForm.get('quota_data') as FormArray;\r\n  }\r\n  \r\n\r\n  //Number of rows in the quote\r\n  count: number = 1;\r\n  /* This function will Add another row to the current Quote */\r\n  AddRow() : void{\r\n    //HTML content for adding another row to the quote\r\n    var htmlContent = `<div class=\"col col-lg\"> \r\n                          <div class=\"p-3 border bg-dark\"><input style=\"width: 100%;\" [(ngModel)]=\"QuoteRow[${this.count}].Item\" [id]=\"Item${this.count}\" type=\"text\"></div> \r\n                          </div> \r\n                          <div class=\"col col-md-auto\"> \r\n                              <div class=\"p-3 border bg-dark\"><input [(ngModel)]=\"QuoteRow[${this.count}].Qty\" [id]=\"Qty${this.count}\" type=\"number\"></div>\r\n                          </div> \r\n                          <div class=\"col col-md-auto\"> \r\n                              <div class=\" p-3 border bg-dark\"><input [(ngModel)]=\"QuoteRow[${this.count}].Price\" [id]=\"Price${this.count}\" type=\"number\" step=\"0.01\"></div> \r\n                          </div>\r\n                       </div>`;\r\n\r\n    //Creating the Seperating Line\r\n    const newElement = this.renderer.createElement('hr');\r\n    newElement.style.borderWidth = '5px';\r\n    newElement.style.color = 'rgb(0,0,0)';\r\n    newElement.style.backgroundColor = 'black';\r\n    //Creating the new Quote Row\r\n    const newElement2 = this.renderer.createElement('div');\r\n    newElement2.className = 'row';\r\n    newElement2.innerHTML = htmlContent;\r\n\r\n    // Append the new element as the last child of the div\r\n    this.renderer.appendChild(this.container.nativeElement, newElement);\r\n    \r\n    this.renderer.appendChild(this.container.nativeElement, newElement2);\r\n\r\n    this.count++;\r\n  }\r\n  \r\n  RetriveData() : void{\r\n    console.log(this.SelectedVal);\r\n    localStorage.setItem('CurrentCustomer',this.SelectedVal);\r\n  }\r\n\r\n  //We only want 1 Secret Note per Quote\r\n  NoteCount: number = 0;\r\n  AddNote() : void{\r\n\r\n    if(this.NoteCount == 0){\r\n      var htmlContent = `<div class=\"col col-lg\"> \r\n                            <h4>Secret Note</h4>\r\n                            <div class=\"p-3 border bg-dark\"><input style=\"width:100%;\" id=\"SecretNote\" type=\"text\"></div>\r\n                          </div>`;\r\n      //Creating a 'Secret Note'\r\n      const SecretNote = this.renderer.createElement('div');\r\n      SecretNote.className = 'row';\r\n      SecretNote.innerHTML = htmlContent;\r\n\r\n      //Creating the Seperating Line\r\n      const newElement = this.renderer.createElement('hr');\r\n      newElement.style.borderWidth = '10px';\r\n      newElement.style.color = 'rgb(0,0,0)';\r\n      newElement.style.backgroundColor = 'black';\r\n\r\n      this.renderer.appendChild(this.SecretNote.nativeElement, newElement);\r\n      this.renderer.appendChild(this.SecretNote.nativeElement, SecretNote);\r\n      ++this.NoteCount;\r\n    }else{\r\n      alert(\"There is already a Secret Note, on this Quote\");\r\n    }\r\n  }\r\n\r\n  QuoteFinish() : any{\r\n    for (let i = 0; i < this.count; i++) {\r\n      const inputId = `Item${i}`;\r\n      const inputValue = this.container.nativeElement.querySelector(`#${inputId}`).value;\r\n      console.log(`Value of input with ID ${inputId}: ${inputValue}`);\r\n    }\r\n  }\r\n\r\n}\r\n","<html>\r\n  <body>\r\n    <div class=\"Greeting\">\r\n      <h1>Hello {{ EmpName }}</h1>\r\n    </div>\r\n    <div class=\"SelectCustomer\">\r\n      <h3 class=\"item\">Select A Customer:</h3>\r\n      <select class=\"item2\" [(ngModel)]=\"SelectedVal\" (ngModelChange)=\"RetriveData()\">\r\n        <option [ngValue]=\"undefined\" disabled hidden>Select a Customer</option>\r\n        <option *ngFor=\"let option of selectOptions\" [value]=\"option.id\">{{ option.name }}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <form [formGroup]=\"quoteForm\">\r\n      <label>\r\n        Title: <input formControlName=\"Id\" />\r\n      </label>\r\n      <h2>Selling Points</h2>\r\n    \r\n      <label>\r\n        Selling Point: <input formControlName=\"point\" />\r\n      </label>\r\n    </form>\r\n    \r\n    {{ this.quoteForm.value | json }}\r\n    <div #container>  \r\n      <div class=\"row\">\r\n        <div class=\"col col-lg\">\r\n          <h4>Description</h4>\r\n          <div class=\"p-3 border bg-dark\"><input style=\"width:100%;\" class=\"QuoteRow[0].Item\" id=\"Item0\" type=\"text\"></div>\r\n        </div>\r\n        <div class=\"col col-md-auto\">\r\n          <h4>Qty</h4>\r\n          <div class=\"p-3 border bg-dark\"><input class=\"QuoteRow[0].Qty\" id=\"Qty0\" type=\"number\"></div>\r\n        </div>\r\n        <div class=\"col col-md-auto\">\r\n          <h4>Price</h4>\r\n          <div class=\"p-3 border bg-dark\"><input class=\"QuoteRow[0].Price\" id=\"Price0\" type=\"number\" step=\"0.01\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div #SecretNote>\r\n\r\n    </div>\r\n\r\n    <button (click)=\"AddRow()\" class=\"btn btn-primary\">Add Row</button>\r\n    <button (click)=\"AddNote()\" class=\"btn btn-primary\">Add Secret Note</button>\r\n    <button (click)=\"QuoteFinish()\" class=\"btn btn-primary\">Submit Quote</button>\r\n  </body>\r\n</html>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}