{"ast":null,"code":"var _class;\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction QuoteeditComponent_div_34_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 33)(2, \"div\", 34)(3, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function QuoteeditComponent_div_34_ng_container_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const control_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.DeleteRow(control_r4[\"value\"]));\n    });\n    i0.ɵɵtext(4, \"DELETE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 36);\n    i0.ɵɵelementStart(6, \"input\", 37);\n    i0.ɵɵlistener(\"change\", function QuoteeditComponent_div_34_ng_container_1_Template_input_change_6_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.calculateTotal());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 38);\n    i0.ɵɵlistener(\"change\", function QuoteeditComponent_div_34_ng_container_1_Template_input_change_7_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.calculateTotal());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction QuoteeditComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, QuoteeditComponent_div_34_ng_container_1_Template, 8, 0, \"ng-container\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r4 = ctx.$implicit;\n    const x_r5 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", x_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.checkIfDeleted(control_r4[\"value\"]));\n  }\n}\nfunction QuoteeditComponent_div_35_div_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 33)(2, \"div\", 34)(3, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function QuoteeditComponent_div_35_div_5_ng_container_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const control_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.DeleteRow(control_r13[\"value\"]));\n    });\n    i0.ɵɵtext(4, \"DELETE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 44);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction QuoteeditComponent_div_35_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtemplate(1, QuoteeditComponent_div_35_div_5_ng_container_1_Template, 6, 0, \"ng-container\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r13 = ctx.$implicit;\n    const x_r14 = ctx.index;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroupName\", x_r14);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.checkIfDeleted(control_r13[\"value\"]));\n  }\n}\nfunction QuoteeditComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"div\", 40)(2, \"h4\");\n    i0.ɵɵtext(3, \"Secret Notes: \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 41);\n    i0.ɵɵtemplate(5, QuoteeditComponent_div_35_div_5_Template, 2, 2, \"div\", 42);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.SecretNotesControls);\n  }\n}\nfunction QuoteeditComponent_ng_container_52_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"label\", 45);\n    i0.ɵɵtext(2, \"Initial Discount(%):\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 46);\n    i0.ɵɵlistener(\"ngModelChange\", function QuoteeditComponent_ng_container_52_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.DiscountPercent = $event);\n    })(\"ngModelChange\", function QuoteeditComponent_ng_container_52_Template_input_ngModelChange_3_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.ApplyDiscount());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.DiscountPercent);\n  }\n}\nfunction QuoteeditComponent_ng_container_53_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"label\", 45);\n    i0.ɵɵtext(2, \"Initial Discount($):\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 47);\n    i0.ɵɵlistener(\"ngModelChange\", function QuoteeditComponent_ng_container_53_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.DiscountDollar = $event);\n    })(\"ngModelChange\", function QuoteeditComponent_ng_container_53_Template_input_ngModelChange_3_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.ApplyDiscount());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.DiscountDollar)(\"max\", ctx_r3.total);\n  }\n}\nexport class QuoteeditComponent {\n  /***********************************************************\n  * This is the constructor of the form.                     *\n  ***********************************************************/\n  constructor(http, router, formBuilder, cd) {\n    this.http = http;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.cd = cd;\n    this.selectedQuoteLines = [];\n    //Quote Details.\n    this.selectedID = 0;\n    this.showSecretNote = false;\n    this.NoteCounter = 0;\n    this.ChangeCounter = 0;\n    this.maxLineID = 0;\n    //Discount and Total Amounts.\n    this.total = 0.0;\n    this.DiscountType = 'P';\n    this.DiscountDollar = 0.00;\n    this.DiscountPercent = 0.00;\n    this.TempTotal = 0;\n    this.DiscountAmount = 0.00;\n    /***********************************************************\n    * This function acquires the customer's info.              *\n    ***********************************************************/\n    this.custURL = 'https://phpapicsci467.azurewebsites.net/php_script/pocreate/CustomerInfo.php';\n    /************************************************************\n    * This function updates the quote database.                 *\n    ************************************************************/\n    this.quoteUrl = 'https://phpapicsci467.azurewebsites.net/php_script/updateQuote.php';\n    //Build the form.\n    this.quoteForm = this.formBuilder.group({\n      rows: this.formBuilder.array([]),\n      SecretNotes: this.formBuilder.array([])\n    });\n  }\n  /***********************************************************\n  * This function runs when the page initializes.            *\n  ***********************************************************/\n  ngOnInit() {\n    this.Datacheck();\n    this.RetrieveQuote();\n  }\n  /***********************************************************\n  * This gets the quote from the DB and fills the form.      *\n  ***********************************************************/\n  RetrieveQuote() {\n    // Get the ID sent from previous page.\n    this.selectedID = history.state.data;\n    // Create a new HttpParams array.\n    let params = new HttpParams();\n    // Append parameters.\n    params = params.append('whereTerm', \"ID\");\n    params = params.append('whereValue', this.selectedID);\n    // Get the quotes.\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/selectQuoteWhere.php', {\n      params\n    }).subscribe(response => {\n      this.selectedQuote = response;\n      // Get the quotes details.\n      this.getQuoteDetails(this.selectedQuote[0]);\n    });\n    // Clear the where term.\n    params = params.delete('whereTerm');\n    // Append parameters.\n    params = params.append('whereTerm', \"QuoteID\");\n    params = params.append('whereValue', this.selectedID);\n    // Get the quote lines.\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/selectQuoteLineWhere.php', {\n      params\n    }).subscribe(response => {\n      this.selectedQuoteLines = response;\n      // Fill the quote lines in the form.\n      this.fillRows();\n    });\n  }\n  /***********************************************************\n  * This function will aquire the required quote details of  *\n  * of the selected quote and store them for later use       *\n  ***********************************************************/\n  getQuoteDetails(quotes) {\n    // Get quote status, ID of the customer, and the email\n    // associated with the quote.\n    this.Status = quotes['Status'];\n    this.CustID = quotes['CustID'];\n    this.CustEmail = quotes['CustEmail'];\n    this.QuoteDate = quotes['QuoteDate'];\n    // Get the customer info based on the CustID.\n    this.RetriveCustInfo(this.CustID);\n  }\n  RetriveCustInfo(CustID) {\n    const quoteData = {\n      custID: CustID\n    };\n    this.http.post(this.custURL, quoteData, {\n      responseType: 'json'\n    }).subscribe(response => {\n      this.Customer = response;\n      this.CustomerName = this.Customer[0]['name'];\n      this.CustomerAddyLn1 = this.Customer[0]['street'];\n      this.CustomerAddyLn2 = this.Customer[0]['city'];\n      this.CustomerContact = this.Customer[0]['contact'];\n    });\n  }\n  /***********************************************************\n  * This function facilitates filling of the form with the   *\n  * quote data.                                              *\n  ***********************************************************/\n  fillRows() {\n    // Loop through the selected quote lines.\n    for (let line of this.selectedQuoteLines) {\n      // Check if the line isn't a secret note.\n      if (line['SecretFlag'] == 'N') {\n        // Populate the row.\n        this.populateRow(line);\n      } else\n        // Else, it is a secret note.\n        {\n          // Populate the secret note section.\n          this.populateSecretNote(line);\n        }\n      // Set the maxLineID to the current LineID. At the end,\n      // maxLineID will be the highest value in the DB.\n      this.maxLineID = line['LineID'];\n    }\n    // Increment the maxLineID.\n    this.maxLineID++;\n    // Calculate the total.\n    this.calculateTotal();\n  }\n  /************************************************************\n  * This populates the current row in quote line section with *\n  * quote data.                                               *\n  ************************************************************/\n  populateRow(line) {\n    // Create a row.\n    const newRow = this.formBuilder.group({\n      ID: line['LineID'],\n      Item: line['RowDesc'],\n      Qty: line['RowQty'],\n      Price: line['RowPrice'],\n      isNew: false,\n      isDeleted: false\n    });\n    // Push to form.\n    this.quoteForm.get('rows').push(newRow);\n  }\n  /*************************************************************\n   * This populates the current row in the secret notes        *\n   * section with secret notes.                                *\n   ************************************************************/\n  populateSecretNote(line) {\n    // Set the secret note flag to true. This makes the\n    // section visible on the form.\n    this.showSecretNote = true;\n    // Build the secret note.\n    const secretNote = this.formBuilder.group({\n      ID: line['LineID'],\n      SecretNote: line['RowDesc'],\n      isNew: false,\n      // determines in the PHP if it needs to be\n      // inserted as a new line, or updated.\n      isDeleted: false // isDeleted determines if row is marked\n      // for deletion. If it's true, it isn't\n      // viewable on the form page. It also\n      // is deleted in the PHP.\n    });\n    // Push the form to the form.\n    this.quoteForm.get('SecretNotes').push(secretNote);\n    // Increment number of notes.\n    this.NoteCounter++;\n  }\n  /************************************************************\n  * This function calculates the quote total.                 *\n  ************************************************************/\n  calculateTotal() {\n    // Get all the rows in the form.\n    const rows = this.quoteForm.get('rows');\n    // Reset total to 0.\n    this.total = 0;\n    // Cycle through all the rows.\n    for (let i = 0; i < rows.length; i++) {\n      const row = rows.at(i);\n      // Check if row exists.\n      if (row) {\n        // Check if the row wasn't deleted. If not, start\n        // getting the total.\n        if (!row.value['isDeleted']) {\n          const qtyControl = row.get('Qty');\n          const priceControl = row.get('Price');\n          // Calculate the row total; add to total.\n          if (qtyControl && priceControl) {\n            const qty = qtyControl.value;\n            const price = priceControl.value;\n            this.total += qty * price;\n            this.cd.markForCheck();\n          }\n        }\n      }\n    }\n    // Alert if the total is less than 0.\n    if ((this.total = this.total - this.DiscountAmount) < 0) {\n      alert(\"Total is less than 0!\");\n    }\n  }\n  /************************************************************\n  * Controls for Quote Line rows in Responsive Form.          *\n  ************************************************************/\n  get rowControls() {\n    return this.quoteForm.get('rows').controls;\n  }\n  /************************************************************\n  * Controls for Secret Notes rows in Responsive Form.        *\n  ************************************************************/\n  get SecretNotesControls() {\n    return this.quoteForm.get('SecretNotes').controls;\n  }\n  /************************************************************\n  * This function marks a row for deletion during a quote     *\n  * update.                                                   *\n  ************************************************************/\n  DeleteRow(line) {\n    line['isDeleted'] = true;\n    this.calculateTotal();\n  }\n  /************************************************************\n  * This function is used by the form to check if a <div> was *\n  * marked for deletion. If so, it does not display.          *\n  ************************************************************/\n  checkIfDeleted(line) {\n    return line['isDeleted'] == false;\n  }\n  /************************************************************\n  * This function adds another quote line to the form.        *\n  ************************************************************/\n  addRow() {\n    // Create a new row; initialize all values to 0.\n    const newRow = this.formBuilder.group({\n      ID: this.maxLineID,\n      Item: '',\n      Qty: 0,\n      Price: 0.0,\n      isNew: true,\n      isDeleted: false\n    });\n    this.maxLineID++;\n    this.calculateTotal();\n    this.quoteForm.get('rows').push(newRow);\n  }\n  /************************************************************\n  * This function adds another secret note to the form.       *\n  ************************************************************/\n  AddNote() {\n    // Check if there are not any notes.\n    if (this.NoteCounter <= 0) {\n      // Calculate the total.\n      this.calculateTotal();\n      // Show the secret section.\n      this.showSecretNote = !this.showSecretNote;\n    }\n    // Build a new note.\n    const newNote = this.formBuilder.group({\n      ID: this.maxLineID,\n      SecretNote: '',\n      isNew: true,\n      isDeleted: false\n    });\n    this.quoteForm.get('SecretNotes').push(newNote);\n    this.NoteCounter++;\n    this.maxLineID++;\n  }\n  /************************************************************\n  * This function is used to apply a discount.                *\n  ************************************************************/\n  ApplyDiscount() {\n    //Check if we have changed the Discount before, so we can \n    // reset the Original Total\n    if (this.ChangeCounter < 1) {\n      this.TempTotal = this.total;\n    } else {\n      this.total = this.TempTotal;\n    }\n    ++this.ChangeCounter;\n    //Check what kind of Discount we are applying\n    if (this.DiscountType == 'P') {\n      // If percent, calculate the discount amount.\n      this.DiscountAmount = this.total * (this.DiscountPercent / 100);\n      // If it is less than 0; reset the discount percent.\n      if (this.total < 0) {\n        this.total = this.TempTotal;\n        this.DiscountPercent = 0.0;\n      }\n    } else if (this.DiscountType == 'D') {\n      // Get the discount amount in dollars.\n      this.DiscountAmount = this.DiscountDollar;\n      if (this.total < 0) {\n        this.DiscountDollar = 0.0;\n        this.total = this.TempTotal;\n      }\n    }\n    // Calculate the total.\n    this.calculateTotal();\n  }\n  /************************************************************\n  * This function cancels editing and returns to previous     *\n  * page.                                                     *\n  ************************************************************/\n  CancelEdit() {\n    this.router.navigate(['/viewquotes']);\n  }\n  QuoteUpdate() {\n    // Calculate the total one more time.\n    this.calculateTotal();\n    // Create data to send to PHP.\n    const formData = this.quoteForm.value;\n    const FinalformData = {\n      formData,\n      quoteID: this.selectedID,\n      quoteEmail: this.CustEmail,\n      quoteStatus: this.Status,\n      quoteTotal: this.total,\n      quoteDiscount: this.DiscountAmount\n    };\n    // Send to PHP.\n    this.http.post(this.quoteUrl, FinalformData).subscribe({\n      next: data => {\n        // Handle the data\n        alert(\"Quote Updated!\");\n      },\n      error: error => {\n        console.error('Error saving data', error);\n      }\n    });\n    // Return to viewquotes page.\n    this.router.navigate(['/viewquotes']);\n  }\n  /**********************************************************\n  * This function will check to make sure a sales associate *\n  *   is properly logged in, and it will check if we have a *\n  *   current customer selected.                            *\n  **********************************************************/\n  Datacheck() {\n    //Stored Associate Name\n    var AssocName = localStorage.getItem('AssocName');\n    if (AssocName !== null) {\n      this.EmpName = JSON.parse(AssocName);\n    }\n    //Stored Admin Flag\n    var AdminFlag = localStorage.getItem('AdminFlag');\n    if (AdminFlag !== null) {\n      this.AdminFlag = JSON.parse(AdminFlag);\n    }\n    //Stored Associate ID\n    var savedAssoc = localStorage.getItem('CurrentAssoc');\n    if (savedAssoc !== null) {\n      this.savedAssoc = JSON.parse(savedAssoc);\n    } else {\n      this.router.navigateByUrl('/');\n      setTimeout(function () {\n        alert(\"Error: User not found, please Login\");\n      }, 200);\n    }\n  }\n}\n_class = QuoteeditComponent;\n_class.ɵfac = function QuoteeditComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-quoteedit\"]],\n  decls: 75,\n  vars: 18,\n  consts: [[1, \"Customer\"], [1, \"item\"], [1, \"custname-container\"], [1, \"custinfo-container\"], [\"for\", \"email\"], [\"name\", \"email\", \"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"quote-date\"], [1, \"EntireQuote\"], [3, \"formGroup\"], [1, \"line-item-header\"], [2, \"width\", \"59%\"], [2, \"width\", \"20%\"], [1, \"lineSection\"], [\"formArrayName\", \"rows\"], [\"class\", \"rows\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"secretSection\", 4, \"ngIf\"], [1, \"row\", \"justify-content-center\"], [1, \"QuoteTotal\", \"col-auto\"], [1, \"discount-header\"], [1, \"discount\"], [1, \"item2\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"P\"], [\"value\", \"D\"], [4, \"ngIf\"], [1, \"status-header\"], [1, \"status\"], [\"type\", \"radio\", \"value\", \"U\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"U\"], [\"type\", \"radio\", \"value\", \"S\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"S\"], [1, \"QuoteButtons\"], [1, \"buttons\", 3, \"click\"], [1, \"rows\", 3, \"formGroupName\"], [1, \"col\", \"col-md-auto\"], [1, \"p-3\", \"border\", \"bg-dark\", \"line\"], [3, \"click\"], [\"formControlName\", \"Item\", \"type\", \"text\", 2, \"width\", \"100%\"], [\"formControlName\", \"Qty\", \"type\", \"number\", 3, \"change\"], [\"formControlName\", \"Price\", \"type\", \"number\", \"step\", \"0.01\", 3, \"change\"], [1, \"secretSection\"], [1, \"secret-header\"], [\"formArrayName\", \"SecretNotes\"], [\"class\", \"secret-note\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"secret-note\", 3, \"formGroupName\"], [\"formControlName\", \"SecretNote\", \"type\", \"text\", 2, \"width\", \"100%\"], [\"for\", \"dscnt\"], [\"id\", \"dscnt\", \"type\", \"number\", \"step\", \"1\", \"max\", \"100\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"dscnt\", \"type\", \"number\", \"step\", \".5\", 3, \"ngModel\", \"max\", \"ngModelChange\"]],\n  template: function QuoteeditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"body\")(2, \"div\", 0)(3, \"h2\", 1);\n      i0.ɵɵtext(4, \"Customer: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"div\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\");\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\");\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\")(15, \"label\", 4);\n      i0.ɵɵtext(16, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteeditComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.CustEmail = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 6);\n      i0.ɵɵtext(19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 7)(21, \"form\", 8)(22, \"div\", 9)(23, \"div\", 10)(24, \"h4\");\n      i0.ɵɵtext(25, \"Description:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 11)(27, \"h4\");\n      i0.ɵɵtext(28, \"Qty:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 11)(30, \"h4\");\n      i0.ɵɵtext(31, \"Price:\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"div\", 12)(33, \"div\", 13);\n      i0.ɵɵtemplate(34, QuoteeditComponent_div_34_Template, 2, 2, \"div\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(35, QuoteeditComponent_div_35_Template, 6, 1, \"div\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\", 16)(37, \"div\", 17)(38, \"h4\");\n      i0.ɵɵtext(39, \"Total:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"h5\");\n      i0.ɵɵtext(41);\n      i0.ɵɵpipe(42, \"number\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(43, \"div\", 18)(44, \"h4\");\n      i0.ɵɵtext(45, \"Apply Discount:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(46, \"div\", 19)(47, \"select\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteeditComponent_Template_select_ngModelChange_47_listener($event) {\n        return ctx.DiscountType = $event;\n      });\n      i0.ɵɵelementStart(48, \"option\", 21);\n      i0.ɵɵtext(49, \"Percentage (%)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"option\", 22);\n      i0.ɵɵtext(51, \"Dollar Amount ($)\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(52, QuoteeditComponent_ng_container_52_Template, 4, 1, \"ng-container\", 23);\n      i0.ɵɵtemplate(53, QuoteeditComponent_ng_container_53_Template, 4, 2, \"ng-container\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"div\", 24)(55, \"h4\");\n      i0.ɵɵtext(56, \"Change Status:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(57, \"div\", 25)(58, \"div\")(59, \"input\", 26);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteeditComponent_Template_input_ngModelChange_59_listener($event) {\n        return ctx.Status = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"label\", 27);\n      i0.ɵɵtext(61, \"Unsanctioned\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(62, \"div\")(63, \"input\", 28);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteeditComponent_Template_input_ngModelChange_63_listener($event) {\n        return ctx.Status = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"label\", 29);\n      i0.ɵɵtext(65, \"Sanctioned\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(66, \"div\", 30)(67, \"button\", 31);\n      i0.ɵɵlistener(\"click\", function QuoteeditComponent_Template_button_click_67_listener() {\n        return ctx.addRow();\n      });\n      i0.ɵɵtext(68, \"Add Row\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"button\", 31);\n      i0.ɵɵlistener(\"click\", function QuoteeditComponent_Template_button_click_69_listener() {\n        return ctx.AddNote();\n      });\n      i0.ɵɵtext(70, \"Add Secret Note\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(71, \"button\", 31);\n      i0.ɵɵlistener(\"click\", function QuoteeditComponent_Template_button_click_71_listener() {\n        return ctx.CancelEdit();\n      });\n      i0.ɵɵtext(72, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"button\", 31);\n      i0.ɵɵlistener(\"click\", function QuoteeditComponent_Template_button_click_73_listener() {\n        return ctx.QuoteUpdate();\n      });\n      i0.ɵɵtext(74, \"Update Quote\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\" \", ctx.CustomerName, \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.CustomerAddyLn1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.CustomerAddyLn2);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.CustomerContact);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.CustEmail);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Quote Created: \", ctx.QuoteDate, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.quoteForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rowControls);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSecretNote);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"$\", i0.ɵɵpipeBind2(42, 15, ctx.total, \"1.2-2\"), \"\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.DiscountType);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.DiscountType == \"P\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.DiscountType == \"D\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.Status);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.Status);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MaxValidator, i3.NgModel, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i4.DecimalPipe],\n  styles: [\"#Item1[_ngcontent-%COMP%] {\\n    width: 100%;\\n\\n}\\n\\n#Qty[_ngcontent-%COMP%]{\\n    width:60px;\\n}\\n\\n#Price[_ngcontent-%COMP%]{\\n    width:80px;\\n}\\nbody[_ngcontent-%COMP%]{\\n    padding-bottom: 20%;\\n    padding-left: 5%;\\n    padding-right: 5%;\\n}\\n\\n.SelectCustomer[_ngcontent-%COMP%]{\\n    display: flex;\\n    gap: 3%;\\n    padding-bottom: 3%;\\n}\\n\\n.Greeting[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content: center;\\n    margin-bottom: 3%;\\n}\\n\\n.quote-date[_ngcontent-%COMP%] {\\n    padding-top: 2%;\\n}\\n\\n.QuoteButtons[_ngcontent-%COMP%]{\\n    padding-top: 3%;\\n    justify-content: center;\\n    display: flex;\\n    gap: 5%;\\n}\\n\\n.QuoteTotal[_ngcontent-%COMP%]{\\n    padding-top: 3%;\\n    display: flex;\\n    align-items: baseline;\\n    gap: 10%;\\n\\n}\\n\\n.line-item-header[_ngcontent-%COMP%], .secret-header[_ngcontent-%COMP%] {\\n    padding-top: 1%;\\n    margin-left: 5em;\\n    display: flex;\\n}\\n\\n.line[_ngcontent-%COMP%] {\\n    display: flex;\\n    gap: 1%;\\n}\\n\\n.discount-header[_ngcontent-%COMP%], .status-header[_ngcontent-%COMP%] {\\n    padding-top: 3%;\\n    display: flex;\\n    justify-content: center;\\n}\\n\\n.discount[_ngcontent-%COMP%], .status[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    gap:1%\\n}\\n\\n.buttons[_ngcontent-%COMP%]{\\n    padding: 5px;\\n    border-radius: 10%;\\n}\\n\\n.buttons[_ngcontent-%COMP%]:hover{\\n  background-color: #000000;\\n  color: rgb(255, 255, 255);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXVvdGVlZGl0L3F1b3RlZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLFdBQVc7O0FBRWY7O0FBRUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxVQUFVO0FBQ2Q7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLE9BQU87SUFDUCxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLGFBQWE7SUFDYixPQUFPO0FBQ1g7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsYUFBYTtJQUNiLHFCQUFxQjtJQUNyQixRQUFROztBQUVaOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLE9BQU87QUFDWDs7QUFFQTtJQUNJLGVBQWU7SUFDZixhQUFhO0lBQ2IsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QjtBQUNKOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtBQUN0Qjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6Qix5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuI0l0ZW0xIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxufVxyXG5cclxuI1F0eXtcclxuICAgIHdpZHRoOjYwcHg7XHJcbn1cclxuXHJcbiNQcmljZXtcclxuICAgIHdpZHRoOjgwcHg7XHJcbn1cclxuYm9keXtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyMCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDUlO1xyXG4gICAgcGFkZGluZy1yaWdodDogNSU7XHJcbn1cclxuXHJcbi5TZWxlY3RDdXN0b21lcntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBnYXA6IDMlO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDMlO1xyXG59XHJcblxyXG4uR3JlZXRpbmd7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzJTtcclxufVxyXG5cclxuLnF1b3RlLWRhdGUge1xyXG4gICAgcGFkZGluZy10b3A6IDIlO1xyXG59XHJcblxyXG4uUXVvdGVCdXR0b25ze1xyXG4gICAgcGFkZGluZy10b3A6IDMlO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZ2FwOiA1JTtcclxufVxyXG5cclxuLlF1b3RlVG90YWx7XHJcbiAgICBwYWRkaW5nLXRvcDogMyU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGJhc2VsaW5lO1xyXG4gICAgZ2FwOiAxMCU7XHJcblxyXG59XHJcblxyXG4ubGluZS1pdGVtLWhlYWRlciwgLnNlY3JldC1oZWFkZXIge1xyXG4gICAgcGFkZGluZy10b3A6IDElO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDVlbTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbi5saW5lIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBnYXA6IDElO1xyXG59XHJcblxyXG4uZGlzY291bnQtaGVhZGVyLCAuc3RhdHVzLWhlYWRlciB7XHJcbiAgICBwYWRkaW5nLXRvcDogMyU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5kaXNjb3VudCwgLnN0YXR1cyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBnYXA6MSVcclxufVxyXG5cclxuLmJ1dHRvbnN7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMCU7XHJcbn1cclxuXHJcbi5idXR0b25zOmhvdmVye1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7XHJcbiAgY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["HttpParams","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","QuoteeditComponent_div_34_ng_container_1_Template_button_click_3_listener","ɵɵrestoreView","_r9","control_r4","ɵɵnextContext","$implicit","ctx_r7","ɵɵresetView","DeleteRow","ɵɵtext","ɵɵelementEnd","ɵɵelement","QuoteeditComponent_div_34_ng_container_1_Template_input_change_6_listener","ctx_r10","calculateTotal","QuoteeditComponent_div_34_ng_container_1_Template_input_change_7_listener","ctx_r11","ɵɵelementContainerEnd","ɵɵtemplate","QuoteeditComponent_div_34_ng_container_1_Template","ɵɵproperty","x_r5","ɵɵadvance","ctx_r0","checkIfDeleted","QuoteeditComponent_div_35_div_5_ng_container_1_Template_button_click_3_listener","_r18","control_r13","ctx_r16","QuoteeditComponent_div_35_div_5_ng_container_1_Template","x_r14","ctx_r12","QuoteeditComponent_div_35_div_5_Template","ctx_r1","SecretNotesControls","QuoteeditComponent_ng_container_52_Template_input_ngModelChange_3_listener","$event","_r20","ctx_r19","DiscountPercent","ctx_r21","ApplyDiscount","ctx_r2","QuoteeditComponent_ng_container_53_Template_input_ngModelChange_3_listener","_r23","ctx_r22","DiscountDollar","ctx_r24","ctx_r3","total","QuoteeditComponent","constructor","http","router","formBuilder","cd","selectedQuoteLines","selectedID","showSecretNote","NoteCounter","ChangeCounter","maxLineID","DiscountType","TempTotal","DiscountAmount","custURL","quoteUrl","quoteForm","group","rows","array","SecretNotes","ngOnInit","Datacheck","RetrieveQuote","history","state","data","params","append","get","subscribe","response","selectedQuote","getQuoteDetails","delete","fillRows","quotes","Status","CustID","CustEmail","QuoteDate","RetriveCustInfo","quoteData","custID","post","responseType","Customer","CustomerName","CustomerAddyLn1","CustomerAddyLn2","CustomerContact","line","populateRow","populateSecretNote","newRow","ID","Item","Qty","Price","isNew","isDeleted","push","secretNote","SecretNote","i","length","row","at","value","qtyControl","priceControl","qty","price","markForCheck","alert","rowControls","controls","addRow","AddNote","newNote","CancelEdit","navigate","QuoteUpdate","formData","FinalformData","quoteID","quoteEmail","quoteStatus","quoteTotal","quoteDiscount","next","error","console","AssocName","localStorage","getItem","EmpName","JSON","parse","AdminFlag","savedAssoc","navigateByUrl","setTimeout","ɵɵdirectiveInject","i1","HttpClient","i2","Router","i3","FormBuilder","ChangeDetectorRef","selectors","decls","vars","consts","template","QuoteeditComponent_Template","rf","ctx","QuoteeditComponent_Template_input_ngModelChange_17_listener","QuoteeditComponent_div_34_Template","QuoteeditComponent_div_35_Template","QuoteeditComponent_Template_select_ngModelChange_47_listener","QuoteeditComponent_ng_container_52_Template","QuoteeditComponent_ng_container_53_Template","QuoteeditComponent_Template_input_ngModelChange_59_listener","QuoteeditComponent_Template_input_ngModelChange_63_listener","QuoteeditComponent_Template_button_click_67_listener","QuoteeditComponent_Template_button_click_69_listener","QuoteeditComponent_Template_button_click_71_listener","QuoteeditComponent_Template_button_click_73_listener","ɵɵtextInterpolate1","ɵɵtextInterpolate","ɵɵpipeBind2"],"sources":["C:\\Users\\ledon\\Desktop\\CSCI467-Group-Project\\src\\app\\quoteedit\\quoteedit.component.ts","C:\\Users\\ledon\\Desktop\\CSCI467-Group-Project\\src\\app\\quoteedit\\quoteedit.component.html"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef} from '@angular/core';\r\nimport { HttpClient, HttpParams} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, FormArray} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-quoteedit',\r\n  templateUrl: './quoteedit.component.html',\r\n  styleUrls: ['./quoteedit.component.css']\r\n})\r\n\r\nexport class QuoteeditComponent {\r\n  // Variables for Quote Response.\r\n  selectedQuote: any;\r\n  selectedQuoteLines: any[] = [];\r\n\r\n  //Quote Details.\r\n  selectedID: number = 0;\r\n  Status: any;\r\n  CustEmail: any;\r\n  QuoteDate: any;\r\n\r\n  // Customer Data.\r\n  Customer: any;\r\n  CustID: any;\r\n  CustomerName: any;\r\n  CustomerContact: any;\r\n  CustomerAddyLn1: any;\r\n  CustomerAddyLn2: any;\r\n\r\n  // Variables for Form.\r\n  quoteForm: FormGroup;\r\n  showSecretNote: boolean = false;\r\n  NoteCounter: number = 0;\r\n  ChangeCounter: number = 0;\r\n  maxLineID: number = 0;\r\n\r\n  //Discount and Total Amounts.\r\n  total: any = 0.0;\r\n  DiscountType: any = 'P';\r\n  DiscountDollar: number = 0.00;\r\n  DiscountPercent: number = 0.00;\r\n  TempTotal: any = 0;\r\n  DiscountAmount: number = 0.00;\r\n\r\n  // Vars for DataCheck()\r\n  EmpName: any;\r\n  savedAssoc: any;\r\n  AdminFlag: any;\r\n\r\n  /***********************************************************\r\n  * This is the constructor of the form.                     *\r\n  ***********************************************************/\r\n  constructor(private http: HttpClient, private router: Router, private formBuilder: FormBuilder, private cd: ChangeDetectorRef) {\r\n    //Build the form.\r\n    this.quoteForm = this.formBuilder.group({\r\n      rows: this.formBuilder.array([]),\r\n      SecretNotes: this.formBuilder.array([])\r\n    });\r\n  }\r\n\r\n  /***********************************************************\r\n  * This function runs when the page initializes.            *\r\n  ***********************************************************/\r\n  ngOnInit() {\r\n    this.Datacheck();\r\n\r\n    this.RetrieveQuote();\r\n  }\r\n\r\n  /***********************************************************\r\n  * This gets the quote from the DB and fills the form.      *\r\n  ***********************************************************/\r\n  RetrieveQuote() {\r\n    // Get the ID sent from previous page.\r\n    this.selectedID = history.state.data;\r\n\r\n    // Create a new HttpParams array.\r\n    let params = new HttpParams();\r\n\r\n    // Append parameters.\r\n    params = params.append('whereTerm', \"ID\");\r\n    params = params.append('whereValue', this.selectedID);\r\n\r\n    // Get the quotes.\r\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/selectQuoteWhere.php', {params}).subscribe((response: any) => {\r\n      this.selectedQuote = response;\r\n      // Get the quotes details.\r\n      this.getQuoteDetails(this.selectedQuote[0]);\r\n    });\r\n\r\n    // Clear the where term.\r\n    params = params.delete('whereTerm');\r\n\r\n    // Append parameters.\r\n    params = params.append('whereTerm', \"QuoteID\");\r\n    params = params.append('whereValue', this.selectedID);\r\n\r\n    // Get the quote lines.\r\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/selectQuoteLineWhere.php', {params}).subscribe((response: any) => {\r\n      this.selectedQuoteLines = response;\r\n      // Fill the quote lines in the form.\r\n      this.fillRows();\r\n    });\r\n  }\r\n\r\n  /***********************************************************\r\n  * This function will aquire the required quote details of  *\r\n  * of the selected quote and store them for later use       *\r\n  ***********************************************************/\r\n  getQuoteDetails(quotes: any) {\r\n  // Get quote status, ID of the customer, and the email\r\n  // associated with the quote.\r\n    this.Status = quotes['Status'];\r\n    this.CustID = quotes['CustID'];\r\n    this.CustEmail = quotes['CustEmail'];\r\n    this.QuoteDate = quotes['QuoteDate'];\r\n\r\n    // Get the customer info based on the CustID.\r\n    this.RetriveCustInfo(this.CustID);\r\n  }\r\n\r\n  /***********************************************************\r\n  * This function acquires the customer's info.              *\r\n  ***********************************************************/\r\n  private custURL='https://phpapicsci467.azurewebsites.net/php_script/pocreate/CustomerInfo.php';\r\n  RetriveCustInfo(CustID: any) : void{\r\n    const quoteData={custID: CustID}\r\n    this.http.post(this.custURL,quoteData, {responseType:'json'}).subscribe(\r\n      response=>{\r\n        this.Customer = response;\r\n        this.CustomerName = this.Customer[0]['name'];\r\n        this.CustomerAddyLn1 = this.Customer[0]['street'];\r\n        this.CustomerAddyLn2 = this.Customer[0]['city'];\r\n        this.CustomerContact = this.Customer[0]['contact'];\r\n    });\r\n  }\r\n\r\n  /***********************************************************\r\n  * This function facilitates filling of the form with the   *\r\n  * quote data.                                              *\r\n  ***********************************************************/\r\n  fillRows() {\r\n    // Loop through the selected quote lines.\r\n    for (let line of this.selectedQuoteLines) {\r\n      // Check if the line isn't a secret note.\r\n      if (line['SecretFlag'] == 'N')\r\n      {\r\n        // Populate the row.\r\n        this.populateRow(line);\r\n      }\r\n      else  // Else, it is a secret note.\r\n      { // Populate the secret note section.\r\n        this.populateSecretNote(line);\r\n      }\r\n      // Set the maxLineID to the current LineID. At the end,\r\n      // maxLineID will be the highest value in the DB.\r\n      this.maxLineID = line['LineID'];\r\n    }\r\n    // Increment the maxLineID.\r\n    this.maxLineID++;\r\n\r\n    // Calculate the total.\r\n    this.calculateTotal();\r\n  }\r\n\r\n  /************************************************************\r\n  * This populates the current row in quote line section with *\r\n  * quote data.                                               *\r\n  ************************************************************/\r\n  populateRow(line: any) {\r\n    // Create a row.\r\n    const newRow = this.formBuilder.group({\r\n      ID: line['LineID'],\r\n      Item: line['RowDesc'],\r\n      Qty: line['RowQty'],\r\n      Price: line['RowPrice'],\r\n      isNew: false,\r\n      isDeleted: false,\r\n    });\r\n    // Push to form.\r\n    (this.quoteForm.get('rows') as FormArray).push(newRow);\r\n  }\r\n\r\n /*************************************************************\r\n  * This populates the current row in the secret notes        *\r\n  * section with secret notes.                                *\r\n  ************************************************************/\r\n  populateSecretNote(line:any) {\r\n    // Set the secret note flag to true. This makes the\r\n    // section visible on the form.\r\n    this.showSecretNote = true;\r\n\r\n    // Build the secret note.\r\n    const secretNote = this.formBuilder.group({\r\n      ID: line['LineID'],\r\n      SecretNote: line['RowDesc'],\r\n      isNew: false,  // isNew determines if the row is new. This\r\n                     // determines in the PHP if it needs to be\r\n                     // inserted as a new line, or updated.\r\n\r\n      isDeleted: false,  // isDeleted determines if row is marked\r\n                         // for deletion. If it's true, it isn't\r\n                         // viewable on the form page. It also\r\n                         // is deleted in the PHP.\r\n    });\r\n    // Push the form to the form.\r\n    (this.quoteForm.get('SecretNotes') as FormArray).push(secretNote);\r\n    // Increment number of notes.\r\n    this.NoteCounter++;\r\n  }\r\n\r\n  /************************************************************\r\n  * This function calculates the quote total.                 *\r\n  ************************************************************/\r\n  calculateTotal() {\r\n    // Get all the rows in the form.\r\n    const rows = this.quoteForm.get('rows') as FormArray;\r\n\r\n    // Reset total to 0.\r\n    this.total = 0;\r\n    \r\n    // Cycle through all the rows.\r\n    for (let i = 0; i < rows.length; i++) {\r\n      const row = rows.at(i);\r\n\r\n      // Check if row exists.\r\n      if (row) {\r\n        // Check if the row wasn't deleted. If not, start\r\n        // getting the total.\r\n        if (!row.value['isDeleted']) {\r\n          const qtyControl = row.get('Qty');\r\n          const priceControl = row.get('Price');\r\n      \r\n          // Calculate the row total; add to total.\r\n          if (qtyControl && priceControl) {\r\n            const qty = qtyControl.value;\r\n            const price = priceControl.value;\r\n            this.total += qty * price;\r\n            this.cd.markForCheck();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    // Alert if the total is less than 0.\r\n    if ((this.total = this.total - this.DiscountAmount) < 0)\r\n    {\r\n      alert(\"Total is less than 0!\");\r\n    }\r\n    \r\n  }\r\n\r\n  /************************************************************\r\n  * Controls for Quote Line rows in Responsive Form.          *\r\n  ************************************************************/\r\n  get rowControls() {\r\n    return (this.quoteForm.get('rows') as FormArray).controls;\r\n  }\r\n\r\n  /************************************************************\r\n  * Controls for Secret Notes rows in Responsive Form.        *\r\n  ************************************************************/\r\n  get SecretNotesControls() {\r\n    return (this.quoteForm.get('SecretNotes') as FormArray).controls;\r\n  }\r\n\r\n  /************************************************************\r\n  * This function marks a row for deletion during a quote     *\r\n  * update.                                                   *\r\n  ************************************************************/\r\n  DeleteRow(line: any): void{\r\n\r\n    line['isDeleted'] = true;\r\n\r\n    this.calculateTotal();\r\n  }\r\n\r\n  /************************************************************\r\n  * This function is used by the form to check if a <div> was *\r\n  * marked for deletion. If so, it does not display.          *\r\n  ************************************************************/\r\n  checkIfDeleted(line: any): boolean\r\n  {\r\n    return line['isDeleted'] == false;\r\n  }\r\n\r\n  /************************************************************\r\n  * This function adds another quote line to the form.        *\r\n  ************************************************************/\r\n  addRow() {\r\n    // Create a new row; initialize all values to 0.\r\n    const newRow = this.formBuilder.group({\r\n      ID: this.maxLineID,\r\n      Item: '',\r\n      Qty: 0,\r\n      Price: 0.0,\r\n      isNew: true,\r\n      isDeleted: false,\r\n    });\r\n    this.maxLineID++;\r\n    this.calculateTotal();\r\n    (this.quoteForm.get('rows') as FormArray).push(newRow);\r\n  }\r\n\r\n  /************************************************************\r\n  * This function adds another secret note to the form.       *\r\n  ************************************************************/\r\n  AddNote() : void {\r\n    // Check if there are not any notes.\r\n    if(this.NoteCounter <= 0){\r\n      // Calculate the total.\r\n      this.calculateTotal();\r\n      // Show the secret section.\r\n      this.showSecretNote = !this.showSecretNote;\r\n    }\r\n\r\n    // Build a new note.\r\n    const newNote = this.formBuilder.group({\r\n      ID: this.maxLineID,\r\n      SecretNote: '',\r\n      isNew: true,\r\n      isDeleted: false,\r\n    });\r\n    (this.quoteForm.get('SecretNotes') as FormArray).push(newNote);\r\n    this.NoteCounter++;\r\n    this.maxLineID++;\r\n  }\r\n  \r\n  /************************************************************\r\n  * This function is used to apply a discount.                *\r\n  ************************************************************/\r\n  ApplyDiscount():void\r\n  {\r\n    //Check if we have changed the Discount before, so we can \r\n    // reset the Original Total\r\n    if (this.ChangeCounter < 1)\r\n    {\r\n      this.TempTotal = this.total;\r\n    }\r\n    else\r\n    {\r\n      this.total = this.TempTotal;\r\n    }\r\n\r\n    ++this.ChangeCounter;\r\n    \r\n    //Check what kind of Discount we are applying\r\n    if(this.DiscountType == 'P')\r\n    {\r\n      // If percent, calculate the discount amount.\r\n      this.DiscountAmount = this.total * (this.DiscountPercent / 100);\r\n\r\n      // If it is less than 0; reset the discount percent.\r\n      if(this.total < 0){\r\n        this.total = this.TempTotal;\r\n        this.DiscountPercent = 0.0;\r\n      }\r\n    }\r\n    else if(this.DiscountType == 'D')\r\n    {\r\n      // Get the discount amount in dollars.\r\n      this.DiscountAmount = this.DiscountDollar;\r\n\r\n      if(this.total < 0){\r\n        this.DiscountDollar = 0.0;\r\n        this.total = this.TempTotal;\r\n      }\r\n    }\r\n\r\n    // Calculate the total.\r\n    this.calculateTotal();\r\n  }\r\n\r\n  /************************************************************\r\n  * This function cancels editing and returns to previous     *\r\n  * page.                                                     *\r\n  ************************************************************/\r\n  CancelEdit() {\r\n    this.router.navigate(['/viewquotes']);\r\n  }\r\n\r\n  /************************************************************\r\n  * This function updates the quote database.                 *\r\n  ************************************************************/\r\n  private quoteUrl = 'https://phpapicsci467.azurewebsites.net/php_script/updateQuote.php';\r\n  QuoteUpdate() :any {\r\n    // Calculate the total one more time.\r\n    this.calculateTotal();\r\n\r\n    // Create data to send to PHP.\r\n    const formData = this.quoteForm.value;\r\n    const FinalformData = {\r\n      formData,\r\n      quoteID: this.selectedID,\r\n      quoteEmail: this.CustEmail,\r\n      quoteStatus: this.Status,\r\n      quoteTotal: this.total,\r\n      quoteDiscount: this.DiscountAmount,\r\n    };\r\n  \r\n    // Send to PHP.\r\n    this.http.post(this.quoteUrl, FinalformData).subscribe({        \r\n      next: (data: any) => {\r\n      // Handle the data\r\n      alert(\"Quote Updated!\");\r\n      },\r\n      error: (error) => {\r\n        console.error('Error saving data', error);\r\n      }\r\n    });\r\n\r\n    // Return to viewquotes page.\r\n    this.router.navigate(['/viewquotes']);\r\n  }\r\n\r\n  /**********************************************************\r\n  * This function will check to make sure a sales associate *\r\n  *   is properly logged in, and it will check if we have a *\r\n  *   current customer selected.                            *\r\n  **********************************************************/\r\n  Datacheck(): void{\r\n    //Stored Associate Name\r\n    var AssocName = localStorage.getItem('AssocName');\r\n    if(AssocName !== null){\r\n      this.EmpName = JSON.parse(AssocName);\r\n    }\r\n\r\n    //Stored Admin Flag\r\n    var AdminFlag = localStorage.getItem('AdminFlag');\r\n    if(AdminFlag !== null){\r\n      this.AdminFlag = JSON.parse(AdminFlag);\r\n    }\r\n  \r\n    //Stored Associate ID\r\n    var savedAssoc = localStorage.getItem('CurrentAssoc');\r\n    if(savedAssoc !== null){\r\n      this.savedAssoc = JSON.parse(savedAssoc);\r\n    }else{\r\n      this.router.navigateByUrl('/');\r\n      setTimeout(function(){\r\n        alert(\"Error: User not found, please Login\");\r\n      }, 200);\r\n    }\r\n  }\r\n}\r\n","<html>\r\n  <body>\r\n\r\n    <div class=\"Customer\">\r\n      <h2 class=\"item\">Customer: </h2>\r\n      <div class=\"custname-container\">\r\n        {{CustomerName}}\r\n    </div>\r\n    <div class=\"custinfo-container\">\r\n        <div>{{CustomerAddyLn1}}</div>\r\n        <div>{{CustomerAddyLn2}}</div>\r\n        <div>{{CustomerContact}}</div>\r\n    </div>\r\n      <div>\r\n        <label for=\"email\">Email:</label>\r\n        <input name=\"email\" [(ngModel)]=\"CustEmail\" type=\"text\">\r\n      </div>\r\n      <div class=\"quote-date\">Quote Created: {{QuoteDate}}</div>\r\n    </div>\r\n  \r\n    <div class = \"EntireQuote\">\r\n      <form [formGroup]=\"quoteForm\">\r\n        <div class=\"line-item-header\">\r\n          <div style=\"width:59%;\" ><h4>Description:</h4></div>\r\n          <div style=\"width:20%;\"><h4>Qty:</h4></div>\r\n          <div style=\"width:20%;\"><h4>Price:</h4></div>\r\n        </div>\r\n        <div class=\"lineSection\">\r\n          <div formArrayName=\"rows\">\r\n            <div class=\"rows\" *ngFor=\"let control of rowControls; let x = index\" [formGroupName]=\"x\">\r\n              <ng-container *ngIf=\"checkIfDeleted(control['value'])\">\r\n                <div class=\"col col-md-auto\">\r\n                  <div class=\"p-3 border bg-dark line\">\r\n                    <button (click)=\"DeleteRow(control['value'])\">DELETE</button>\r\n                    <input style=\"width:100%;\" formControlName=\"Item\" type=\"text\">\r\n                    <input formControlName=\"Qty\" type=\"number\" (change)=\"calculateTotal()\">\r\n                    <input formControlName=\"Price\" type=\"number\" step=\"0.01\" (change)=\"calculateTotal()\">\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"secretSection\" *ngIf=\"showSecretNote\">\r\n          <div class=\"secret-header\">\r\n            <h4>Secret Notes: </h4>\r\n          </div>\r\n          <div formArrayName=\"SecretNotes\">\r\n            <div class=\"secret-note\" *ngFor=\"let control of SecretNotesControls; let x = index\" [formGroupName]=\"x\">\r\n              <ng-container *ngIf=\"checkIfDeleted(control['value'])\">\r\n                <div class=\"col col-md-auto\">\r\n                  <div class=\"p-3 border bg-dark line\">\r\n                    <button (click)=\"DeleteRow(control['value'])\">DELETE</button>\r\n                    <input style=\"width:100%;\" formControlName=\"SecretNote\" type=\"text\">\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"row justify-content-center\">           \r\n      <div class=\"QuoteTotal col-auto\">\r\n        <h4>Total:</h4>\r\n        <h5>${{ total | number: '1.2-2'}}</h5>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"discount-header\">\r\n      <h4>Apply Discount:</h4>\r\n    </div>\r\n    <div class=\"discount\">\r\n      <!--Drop Down Menu-->\r\n      <select class=\"item2\" [(ngModel)]=\"DiscountType\">\r\n          <option value=\"P\">Percentage (%)</option>\r\n          <option value=\"D\">Dollar Amount ($)</option>\r\n      </select>\r\n      <!--End of Drop Down-->\r\n\r\n      <!--Code below is for Percentage Option-->\r\n          <ng-container *ngIf=\"DiscountType == 'P'\">\r\n              <label for=\"dscnt\">Initial Discount(%):</label>\r\n              <input id=\"dscnt\" type=\"number\" step=\"1\" [(ngModel)]=\"DiscountPercent\" max=\"100\" (ngModelChange)=\"ApplyDiscount()\">\r\n          </ng-container>\r\n      <!--End of Percentage Option-->\r\n\r\n      <!--Code below is for Dollar Option-->\r\n          <ng-container *ngIf=\"DiscountType == 'D'\">\r\n              <label for=\"dscnt\">Initial Discount($):</label>\r\n              <input id=\"dscnt\" type=\"number\" step=\".5\" [(ngModel)]=\"DiscountDollar\" [max]=\"total\" (ngModelChange)=\"ApplyDiscount()\">\r\n          </ng-container>\r\n      <!--End of Dollar Option-->\r\n    </div>\r\n\r\n    <div class=\"status-header\"> \r\n      <h4>Change Status:</h4>\r\n    </div>\r\n\r\n    <div class=\"status\">\r\n      <div>\r\n        <input type=\"radio\" [(ngModel)]=\"Status\" value=\"U\" />\r\n        <label for=\"U\">Unsanctioned</label>\r\n      </div>\r\n      <div>\r\n        <input type=\"radio\" [(ngModel)]=\"Status\" value=\"S\"/>\r\n        <label for=\"S\">Sanctioned</label>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"QuoteButtons\">\r\n      <button (click)=\"addRow()\" class=\"buttons\">Add Row</button>\r\n      <button (click)=\"AddNote()\" class=\"buttons\">Add Secret Note</button>\r\n      <button (click)=\"CancelEdit()\" class=\"buttons\">Cancel</button>\r\n      <button (click)=\"QuoteUpdate()\" class=\"buttons\">Update Quote</button>\r\n    </div>\r\n\r\n\r\n\r\n  </body>\r\n</html>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}