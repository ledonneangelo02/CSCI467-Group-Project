{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"container\"];\nconst _c1 = [\"SecretNote\"];\nfunction QuoteComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r3.name);\n  }\n}\n/* *****************************************************************\n * This is the QuoteComponent, it is responsible for the interface *\n *  that allows a sales associate to make a quote                  *\n * *****************************************************************/\nexport class QuoteComponent {\n  constructor(renderer, http, router) {\n    this.renderer = renderer;\n    this.http = http;\n    this.router = router;\n    this.selectOptions = [];\n    this.QuoteRow = [{\n      Item: '',\n      Qty: 0,\n      Price: 0.0\n    }];\n    //Number of rows in the quote\n    this.count = 2;\n    //We only want 1 Secret Note per Quote\n    this.NoteCount = 0;\n  }\n  ngOnInit() {\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/Customers.php').subscribe(response => {\n      this.selectOptions = response;\n    });\n    var CustomerSelect = localStorage.getItem('CurrentCustomer');\n    if (CustomerSelect !== null) {\n      this.SelectedVal = JSON.parse(CustomerSelect);\n      console.log(this.SelectedVal);\n    }\n    var AssocName = localStorage.getItem('AssocName');\n    if (AssocName !== null) {\n      this.EmpName = JSON.parse(AssocName);\n    }\n    var savedAssoc = localStorage.getItem('CurrentAssoc');\n    if (savedAssoc !== null) {\n      savedAssoc = JSON.parse(savedAssoc);\n      console.log(savedAssoc);\n    } else {\n      this.router.navigateByUrl('/');\n      setTimeout(function () {\n        alert(\"Error: User not found, please Login\");\n      }, 200);\n    }\n  }\n  /* This function will Add another row to the current Quote */\n  AddRow() {\n    this.QuoteRow.push({\n      Item: '',\n      Qty: 0,\n      Price: 0.0\n    });\n    //HTML content for adding another row to the quote\n    var htmlContent = `<div class=\"col col-lg\"> \n                          <div class=\"p-3 border bg-dark\"><input style=\"width: 100%;\" [(ngModel)]=\"Item${this.count}\" id=\"Item${this.count}\" type=\"text\"></div> \n                          </div> \n                          <div class=\"col col-md-auto\"> \n                              <div class=\"p-3 border bg-dark\"><input [(ngModel)]=\"Qty${this.count}\" id=\"Qty${this.count}\" type=\"number\"></div>\n                          </div> \n                          <div class=\"col col-md-auto\"> \n                              <div class=\" p-3 border bg-dark\"><input [(ngModel)]=\"Price${this.count}\" id=\"Price${this.count}\" type=\"number\" step=\"0.01\"></div> \n                          </div>\n                       </div>`;\n    //Creating the Seperating Line\n    const newElement = this.renderer.createElement('hr');\n    newElement.style.borderWidth = '5px';\n    newElement.style.color = 'rgb(0,0,0)';\n    newElement.style.backgroundColor = 'black';\n    //Creating the new Quote Row\n    const newElement2 = this.renderer.createElement('div');\n    newElement2.className = 'row';\n    newElement2.innerHTML = htmlContent;\n    // Append the new element as the last child of the div\n    this.renderer.appendChild(this.container.nativeElement, newElement);\n    this.renderer.appendChild(this.container.nativeElement, newElement2);\n    this.count++;\n  }\n  RetriveData() {\n    console.log(this.SelectedVal);\n    localStorage.setItem('CurrentCustomer', this.SelectedVal);\n  }\n  AddNote() {\n    if (this.NoteCount == 0) {\n      var htmlContent = `<div class=\"col col-lg\"> \n                            <h4>Secret Note</h4>\n                            <div class=\"p-3 border bg-dark\"><input style=\"width:100%;\" id=\"SecretNote\" type=\"text\"></div>\n                          </div>`;\n      //Creating a 'Secret Note'\n      const SecretNote = this.renderer.createElement('div');\n      SecretNote.className = 'row';\n      SecretNote.innerHTML = htmlContent;\n      //Creating the Seperating Line\n      const newElement = this.renderer.createElement('hr');\n      newElement.style.borderWidth = '10px';\n      newElement.style.color = 'rgb(0,0,0)';\n      newElement.style.backgroundColor = 'black';\n      this.renderer.appendChild(this.SecretNote.nativeElement, newElement);\n      this.renderer.appendChild(this.SecretNote.nativeElement, SecretNote);\n      ++this.NoteCount;\n    } else {\n      alert(\"There is already a Secret Note, on this Quote\");\n    }\n  }\n  QuoteFinish() {\n    for (let i = 1; i < this.count; i++) {\n      const itemValue = document.getElementById(`Item${i}`).value;\n      const qtyValue = document.getElementById(`Qty${i}`).value;\n      const priceValue = document.getElementById(`Price${i}`).value;\n      console.log(`Row ${i} - Description: ${itemValue}, Qty: ${qtyValue}, Price: ${priceValue}`);\n    }\n  }\n}\n_class = QuoteComponent;\n_class.ɵfac = function QuoteComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-quote\"]],\n  viewQuery: function QuoteComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.SecretNote = _t.first);\n    }\n  },\n  decls: 38,\n  vars: 8,\n  consts: [[1, \"Greeting\"], [1, \"SelectCustomer\"], [1, \"item\"], [1, \"item2\", 3, \"ngModel\", \"ngModelChange\"], [\"disabled\", \"\", \"hidden\", \"\", 3, \"ngValue\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"container\", \"\"], [1, \"row\"], [1, \"col\", \"col-lg\"], [1, \"p-3\", \"border\", \"bg-dark\"], [\"type\", \"text\", 3, \"ngModel\", \"id\", \"ngModelChange\"], [1, \"col\", \"col-md-auto\"], [\"id\", \"Qty1\", \"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"Price1\", \"type\", \"number\", \"step\", \"0.01\", 3, \"ngModel\", \"ngModelChange\"], [\"SecretNote\", \"\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-primary\"], [3, \"value\"]],\n  template: function QuoteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"body\")(2, \"div\", 0)(3, \"h1\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"h3\", 2);\n      i0.ɵɵtext(7, \"Select A Customer:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_select_ngModelChange_8_listener($event) {\n        return ctx.SelectedVal = $event;\n      })(\"ngModelChange\", function QuoteComponent_Template_select_ngModelChange_8_listener() {\n        return ctx.RetriveData();\n      });\n      i0.ɵɵelementStart(9, \"option\", 4);\n      i0.ɵɵtext(10, \"Select a Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, QuoteComponent_option_11_Template, 2, 2, \"option\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", null, 6)(14, \"div\", 7)(15, \"div\", 8)(16, \"h4\");\n      i0.ɵɵtext(17, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 9)(19, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.QuoteRow[1].Item = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\", 11)(21, \"h4\");\n      i0.ɵɵtext(22, \"Qty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 9)(24, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.QuoteRow[1].Qty = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 11)(26, \"h4\");\n      i0.ɵɵtext(27, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 9)(29, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.QuoteRow[1].Price = $event;\n      });\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(30, \"div\", null, 14);\n      i0.ɵɵelementStart(32, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function QuoteComponent_Template_button_click_32_listener() {\n        return ctx.AddRow();\n      });\n      i0.ɵɵtext(33, \"Add Row\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function QuoteComponent_Template_button_click_34_listener() {\n        return ctx.AddNote();\n      });\n      i0.ɵɵtext(35, \"Add Secret Note\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"button\", 16);\n      i0.ɵɵtext(37, \"Submit Quote\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Hello \", ctx.EmpName, \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.SelectedVal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngValue\", undefined);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.selectOptions);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.QuoteRow[1].Item)(\"id\", ctx.Item1);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.QuoteRow[1].Qty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.QuoteRow[1].Price);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"#Item1[_ngcontent-%COMP%] {\\n    width: 100%;\\n\\n}\\n\\n#Qty[_ngcontent-%COMP%]{\\n    width:60px;\\n}\\n\\n#Price[_ngcontent-%COMP%]{\\n    width:80px;\\n}\\nbody[_ngcontent-%COMP%]{\\n    padding-bottom: 20%;\\n    padding-left: 5%;\\n    padding-right: 5%;\\n}\\n\\n.SelectCustomer[_ngcontent-%COMP%]{\\n    display:inline-flex;\\n    justify-content: space-between;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXVvdGUvcXVvdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxXQUFXOztBQUVmOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksVUFBVTtBQUNkO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQiw4QkFBOEI7QUFDbEMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuI0l0ZW0xIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxufVxyXG5cclxuI1F0eXtcclxuICAgIHdpZHRoOjYwcHg7XHJcbn1cclxuXHJcbiNQcmljZXtcclxuICAgIHdpZHRoOjgwcHg7XHJcbn1cclxuYm9keXtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyMCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDUlO1xyXG4gICAgcGFkZGluZy1yaWdodDogNSU7XHJcbn1cclxuXHJcbi5TZWxlY3RDdXN0b21lcntcclxuICAgIGRpc3BsYXk6aW5saW5lLWZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r3","id","ɵɵadvance","ɵɵtextInterpolate","name","QuoteComponent","constructor","renderer","http","router","selectOptions","QuoteRow","Item","Qty","Price","count","NoteCount","ngOnInit","get","subscribe","response","CustomerSelect","localStorage","getItem","SelectedVal","JSON","parse","console","log","AssocName","EmpName","savedAssoc","navigateByUrl","setTimeout","alert","AddRow","push","htmlContent","newElement","createElement","style","borderWidth","color","backgroundColor","newElement2","className","innerHTML","appendChild","container","nativeElement","RetriveData","setItem","AddNote","SecretNote","QuoteFinish","i","itemValue","document","getElementById","value","qtyValue","priceValue","ɵɵdirectiveInject","Renderer2","i1","HttpClient","i2","Router","selectors","viewQuery","QuoteComponent_Query","rf","ctx","ɵɵlistener","QuoteComponent_Template_select_ngModelChange_8_listener","$event","ɵɵtemplate","QuoteComponent_option_11_Template","QuoteComponent_Template_input_ngModelChange_19_listener","QuoteComponent_Template_input_ngModelChange_24_listener","QuoteComponent_Template_input_ngModelChange_29_listener","ɵɵelement","QuoteComponent_Template_button_click_32_listener","QuoteComponent_Template_button_click_34_listener","ɵɵtextInterpolate1","undefined","Item1"],"sources":["C:\\Users\\ledon\\Desktop\\CSCI467-Group-Project\\src\\app\\quote\\quote.component.ts","C:\\Users\\ledon\\Desktop\\CSCI467-Group-Project\\src\\app\\quote\\quote.component.html"],"sourcesContent":["import { Component, ElementRef, Renderer2, ViewChild, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, NavigationEnd,ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-quote',\r\n  templateUrl: './quote.component.html',\r\n  styleUrls: ['./quote.component.css'],\r\n\r\n})\r\n\r\n/* ***************************************************************** \r\n * This is the QuoteComponent, it is responsible for the interface *\r\n *  that allows a sales associate to make a quote                  *\r\n * *****************************************************************/\r\nexport class QuoteComponent implements OnInit{\r\n\r\n  responseFromPHP: any;\r\n  selectOptions: any[] = [];\r\n  SelectedVal: any;\r\n  EmpName: any;\r\n  QuoteRow: any[] = [{ Item: '', Qty: 0, Price: 0.0 }];\r\n\r\n  constructor(private renderer: Renderer2, private http: HttpClient, private router: Router) { }\r\n\r\n  @ViewChild('container', { static: true }) container!: ElementRef;\r\n  @ViewChild('SecretNote', { static: true }) SecretNote!: ElementRef;\r\n  ngOnInit() {\r\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/Customers.php').subscribe((response: any) => {\r\n      this.selectOptions = response;\r\n    });\r\n    var CustomerSelect = localStorage.getItem('CurrentCustomer');\r\n    if(CustomerSelect !== null){\r\n      this.SelectedVal = JSON.parse(CustomerSelect);\r\n      console.log(this.SelectedVal);\r\n    }\r\n    var AssocName = localStorage.getItem('AssocName');\r\n    if(AssocName !== null){\r\n      this.EmpName = JSON.parse(AssocName);\r\n    }\r\n    var savedAssoc = localStorage.getItem('CurrentAssoc');\r\n    if(savedAssoc !== null){\r\n      savedAssoc = JSON.parse(savedAssoc);\r\n      console.log(savedAssoc);\r\n    }else{\r\n      this.router.navigateByUrl('/');\r\n      setTimeout(function(){\r\n        alert(\"Error: User not found, please Login\");\r\n      }, 200);\r\n    }\r\n  }\r\n  \r\n\r\n  //Number of rows in the quote\r\n  count: number = 2;\r\n  /* This function will Add another row to the current Quote */\r\n  AddRow() : void{\r\n    this.QuoteRow.push({ Item: '', Qty: 0, Price: 0.0 });\r\n    //HTML content for adding another row to the quote\r\n    var htmlContent = `<div class=\"col col-lg\"> \r\n                          <div class=\"p-3 border bg-dark\"><input style=\"width: 100%;\" [(ngModel)]=\"Item${this.count}\" id=\"Item${this.count}\" type=\"text\"></div> \r\n                          </div> \r\n                          <div class=\"col col-md-auto\"> \r\n                              <div class=\"p-3 border bg-dark\"><input [(ngModel)]=\"Qty${this.count}\" id=\"Qty${this.count}\" type=\"number\"></div>\r\n                          </div> \r\n                          <div class=\"col col-md-auto\"> \r\n                              <div class=\" p-3 border bg-dark\"><input [(ngModel)]=\"Price${this.count}\" id=\"Price${this.count}\" type=\"number\" step=\"0.01\"></div> \r\n                          </div>\r\n                       </div>`;\r\n\r\n    //Creating the Seperating Line\r\n    const newElement = this.renderer.createElement('hr');\r\n    newElement.style.borderWidth = '5px';\r\n    newElement.style.color = 'rgb(0,0,0)';\r\n    newElement.style.backgroundColor = 'black';\r\n    //Creating the new Quote Row\r\n    const newElement2 = this.renderer.createElement('div');\r\n    newElement2.className = 'row';\r\n    newElement2.innerHTML = htmlContent;\r\n\r\n    // Append the new element as the last child of the div\r\n    this.renderer.appendChild(this.container.nativeElement, newElement);\r\n    \r\n    this.renderer.appendChild(this.container.nativeElement, newElement2);\r\n\r\n    this.count++;\r\n  }\r\n  \r\n  RetriveData() : void{\r\n    console.log(this.SelectedVal);\r\n    localStorage.setItem('CurrentCustomer',this.SelectedVal);\r\n  }\r\n\r\n  //We only want 1 Secret Note per Quote\r\n  NoteCount: number = 0;\r\n  AddNote() : void{\r\n\r\n    if(this.NoteCount == 0){\r\n      var htmlContent = `<div class=\"col col-lg\"> \r\n                            <h4>Secret Note</h4>\r\n                            <div class=\"p-3 border bg-dark\"><input style=\"width:100%;\" id=\"SecretNote\" type=\"text\"></div>\r\n                          </div>`;\r\n      //Creating a 'Secret Note'\r\n      const SecretNote = this.renderer.createElement('div');\r\n      SecretNote.className = 'row';\r\n      SecretNote.innerHTML = htmlContent;\r\n\r\n      //Creating the Seperating Line\r\n      const newElement = this.renderer.createElement('hr');\r\n      newElement.style.borderWidth = '10px';\r\n      newElement.style.color = 'rgb(0,0,0)';\r\n      newElement.style.backgroundColor = 'black';\r\n\r\n      this.renderer.appendChild(this.SecretNote.nativeElement, newElement);\r\n      this.renderer.appendChild(this.SecretNote.nativeElement, SecretNote);\r\n      ++this.NoteCount;\r\n    }else{\r\n      alert(\"There is already a Secret Note, on this Quote\");\r\n    }\r\n  }\r\n\r\n  QuoteFinish() : any{\r\n    for (let i = 1; i < this.count; i++) {\r\n      const itemValue = (<HTMLInputElement>document.getElementById(`Item${i}`)).value;\r\n      const qtyValue = (<HTMLInputElement>document.getElementById(`Qty${i}`)).value;\r\n      const priceValue = (<HTMLInputElement>document.getElementById(`Price${i}`)).value;\r\n      console.log(`Row ${i} - Description: ${itemValue}, Qty: ${qtyValue}, Price: ${priceValue}`);\r\n    }\r\n  }\r\n\r\n}\r\n","<html>\r\n  <body>\r\n    <div class=\"Greeting\">\r\n      <h1>Hello {{ EmpName }}</h1>\r\n    </div>\r\n    <div class=\"SelectCustomer\">\r\n      <h3 class=\"item\">Select A Customer:</h3>\r\n      <select class=\"item2\" [(ngModel)]=\"SelectedVal\" (ngModelChange)=\"RetriveData()\">\r\n        <option [ngValue]=\"undefined\" disabled hidden>Select a Customer</option>\r\n        <option *ngFor=\"let option of selectOptions\" [value]=\"option.id\">{{ option.name }}</option>\r\n      </select>\r\n    </div>\r\n    \r\n    <div #container>  \r\n      <div class=\"row\">\r\n        <div class=\"col col-lg\">\r\n          <h4>Description</h4>\r\n          <div class=\"p-3 border bg-dark\"><input [(ngModel)]=\"QuoteRow[1].Item\" [id]=\"Item1\" type=\"text\"></div>\r\n        </div>\r\n        <div class=\"col col-md-auto\">\r\n          <h4>Qty</h4>\r\n          <div class=\"p-3 border bg-dark\"><input [(ngModel)]=\"QuoteRow[1].Qty\" id=\"Qty1\" type=\"number\"></div>\r\n        </div>\r\n        <div class=\"col col-md-auto\">\r\n          <h4>Price</h4>\r\n          <div class=\"p-3 border bg-dark\"><input [(ngModel)]=\"QuoteRow[1].Price\" id=\"Price1\" type=\"number\" step=\"0.01\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div #SecretNote>\r\n\r\n    </div>\r\n\r\n    <button (click)=\"AddRow()\" class=\"btn btn-primary\">Add Row</button>\r\n    <button (click)=\"AddNote()\" class=\"btn btn-primary\">Add Secret Note</button>\r\n    <button class=\"btn btn-primary\">Submit Quote</button>\r\n  </body>\r\n</html>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}