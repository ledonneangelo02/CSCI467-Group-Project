{"ast":null,"code":"var HomeComponent_1;\nimport { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { Component } from '@angular/core';\nexport let HomeComponent = HomeComponent_1 = class HomeComponent {\n  constructor() {\n    this.Email = \"\";\n  }\n  //This function is used to pop up our login form\n  Showlogin() {\n    const forDisplay = document.getElementById(\"LoginForm\");\n    const logButton = document.getElementById(\"OpenLogin\");\n    const closeButton = document.getElementById(\"CloseLogin\");\n    if (forDisplay != null && logButton != null && closeButton != null) {\n      forDisplay.style.display = \"block\";\n      logButton.style.display = \"none\";\n      closeButton.style.display = \"flex\";\n    }\n  }\n  //This function is used to close the form and redisplay the login button\n  CloseLogin() {\n    const forDisplay = document.getElementById(\"LoginForm\");\n    const logButton = document.getElementById(\"OpenLogin\");\n    const closeButton = document.getElementById(\"CloseLogin\");\n    if (forDisplay != null && logButton != null && closeButton != null) {\n      forDisplay.style.display = \"none\";\n      logButton.style.display = \"flex\";\n      closeButton.style.display = \"none\";\n    }\n  }\n  ValidateLogin(event) {\n    event.preventDefault(); // Prevent the default form submission behavior\n  }\n};\n\nHomeComponent = HomeComponent_1 = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n}), NgModule({\n  declarations: [Component, HomeComponent_1],\n  imports: [BrowserModule, FormsModule // Add FormsModule to the imports array\n  ],\n\n  providers: [],\n  bootstrap: [Component]\n})], HomeComponent);","map":{"version":3,"names":["NgModule","BrowserModule","FormsModule","Component","HomeComponent","HomeComponent_1","constructor","Email","Showlogin","forDisplay","document","getElementById","logButton","closeButton","style","display","CloseLogin","ValidateLogin","event","preventDefault","__decorate","selector","templateUrl","styleUrls","declarations","imports","providers","bootstrap"],"sources":["C:\\Users\\ledon\\Desktop\\CSCI467-Group-Project\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms'; \r\nimport { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\n@NgModule({\r\n  declarations: [\r\n    Component,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule // Add FormsModule to the imports array\r\n  ],\r\n  providers: [],\r\n  bootstrap: [Component]\r\n})\r\n\r\nexport class HomeComponent {\r\n\r\n\r\n  //This function is used to pop up our login form\r\n  Showlogin(): void{\r\n    const forDisplay = document.getElementById(\"LoginForm\");\r\n    const logButton = document.getElementById(\"OpenLogin\");\r\n    const closeButton = document.getElementById(\"CloseLogin\");\r\n    if(forDisplay != null && logButton != null && closeButton != null){\r\n      forDisplay.style.display = \"block\";\r\n      logButton.style.display = \"none\";\r\n      closeButton.style.display=\"flex\";\r\n    }\r\n  }\r\n\r\n  //This function is used to close the form and redisplay the login button\r\n  CloseLogin(): void{\r\n    const forDisplay = document.getElementById(\"LoginForm\");\r\n    const logButton = document.getElementById(\"OpenLogin\");\r\n    const closeButton = document.getElementById(\"CloseLogin\");\r\n    if(forDisplay != null && logButton != null && closeButton != null){\r\n      forDisplay.style.display = \"none\";\r\n      logButton.style.display = \"flex\";\r\n      closeButton.style.display=\"none\";\r\n    }\r\n  }\r\n\r\n  Email : string=\"\";\r\n  ValidateLogin(event : Event){\r\n    event.preventDefault(); // Prevent the default form submission behavior\r\n\r\n  }\r\n\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,SAAS,QAAQ,eAAe;AAsBlC,WAAMC,aAAa,GAAAC,eAAA,GAAnB,MAAMD,aAAa;EAAnBE,YAAA;IA2BL,KAAAC,KAAK,GAAU,EAAE;EAMnB;EA9BE;EACAC,SAASA,CAAA;IACP,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;IACvD,MAAMC,SAAS,GAAGF,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;IACtD,MAAME,WAAW,GAAGH,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IACzD,IAAGF,UAAU,IAAI,IAAI,IAAIG,SAAS,IAAI,IAAI,IAAIC,WAAW,IAAI,IAAI,EAAC;MAChEJ,UAAU,CAACK,KAAK,CAACC,OAAO,GAAG,OAAO;MAClCH,SAAS,CAACE,KAAK,CAACC,OAAO,GAAG,MAAM;MAChCF,WAAW,CAACC,KAAK,CAACC,OAAO,GAAC,MAAM;;EAEpC;EAEA;EACAC,UAAUA,CAAA;IACR,MAAMP,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;IACvD,MAAMC,SAAS,GAAGF,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;IACtD,MAAME,WAAW,GAAGH,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IACzD,IAAGF,UAAU,IAAI,IAAI,IAAIG,SAAS,IAAI,IAAI,IAAIC,WAAW,IAAI,IAAI,EAAC;MAChEJ,UAAU,CAACK,KAAK,CAACC,OAAO,GAAG,MAAM;MACjCH,SAAS,CAACE,KAAK,CAACC,OAAO,GAAG,MAAM;MAChCF,WAAW,CAACC,KAAK,CAACC,OAAO,GAAC,MAAM;;EAEpC;EAGAE,aAAaA,CAACC,KAAa;IACzBA,KAAK,CAACC,cAAc,EAAE,CAAC,CAAC;EAE1B;CAED;;AAjCYf,aAAa,GAAAC,eAAA,GAAAe,UAAA,EAnBzBjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,EAEDvB,QAAQ,CAAC;EACRwB,YAAY,EAAE,CACZrB,SAAS,EACTE,eAAa,CACd;EACDoB,OAAO,EAAE,CACPxB,aAAa,EACbC,WAAW,CAAC;EAAA,CACb;;EACDwB,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,CAACxB,SAAS;CACtB,CAAC,C,EAEWC,aAAa,CAiCzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}