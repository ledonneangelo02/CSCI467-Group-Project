{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction QuoteComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", option_r3.name, \" \");\n  }\n}\nfunction QuoteComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"div\", 20)(2, \"h4\");\n    i0.ɵɵtext(3, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 21);\n    i0.ɵɵelement(5, \"input\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 23)(7, \"h4\");\n    i0.ɵɵtext(8, \"Qty\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 21);\n    i0.ɵɵelement(10, \"input\", 24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 23)(12, \"h4\");\n    i0.ɵɵtext(13, \"Price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 21);\n    i0.ɵɵelement(15, \"input\", 25);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r5);\n  }\n}\nfunction QuoteComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelement(1, \"hr\", 27);\n    i0.ɵɵelementStart(2, \"h4\");\n    i0.ɵɵtext(3, \"Secret Note\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 21);\n    i0.ɵɵelement(5, \"input\", 28);\n    i0.ɵɵelementEnd()();\n  }\n}\n/* *****************************************************************\n * This is the QuoteComponent, it is responsible for the interface *\n *  that allows a sales associate to make a quote                  *\n * *****************************************************************/\nexport class QuoteComponent {\n  constructor(http, router, formBuilder, cd) {\n    this.http = http;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.cd = cd;\n    this.selectOptions = [];\n    this.showSecretNote = false;\n    this.total = 0.0;\n    this.quoteUrl = 'https://phpapicsci467.azurewebsites.net/php_script/FinalizeQuote.php';\n    this.quoteForm = this.formBuilder.group({\n      rows: this.formBuilder.array([this.createRow() // Creates our inital row, so the page isn't empty\n      ]),\n\n      SecretNote: ['']\n    });\n  }\n  ngOnInit() {\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/Customers.php').subscribe(response => {\n      this.selectOptions = response;\n    });\n    //This will check the localStorage for the Associate ID and if there is a customer currently picked\n    this.Datacheck();\n  }\n  get rowControls() {\n    return this.quoteForm.get('rows').controls;\n  }\n  /* This function will add another row to the current Quote */\n  addRow() {\n    const newRow = this.formBuilder.group({\n      Item: '',\n      Qty: 0,\n      Price: 0.0\n    });\n    this.calculateRunningTotal();\n    this.quoteForm.get('rows').push(newRow);\n    console.log(this.CustEmail);\n  }\n  createRow() {\n    return this.formBuilder.group({\n      Item: '',\n      Qty: 0,\n      Price: 0.0\n    });\n  }\n  /* **********************************************************\n   * This function will aquire the customer that was selected *\n   *   and store it for later use.                            *\n   * **********************************************************/\n  RetriveCustomer() {\n    for (let i = 0; i < this.selectOptions.length; ++i) {\n      if (this.selectOptions[i].id == this.SelectedVal) {\n        this.CustName = this.selectOptions[i].name;\n        localStorage.setItem('CurrentCustomer', this.SelectedVal);\n        localStorage.setItem('CurrentCustomerName', this.CustName);\n      }\n    }\n  }\n  AddNote() {\n    this.showSecretNote = !this.showSecretNote;\n  }\n  /* **********************************************\n   * This function will calculate the Quote Total *\n   * **********************************************/\n  calculateRunningTotal() {\n    const rows = this.quoteForm.get('rows');\n    for (let i = 0; i < rows.length; i++) {\n      const row = rows.at(i);\n      if (row) {\n        const qtyControl = row.get('Qty');\n        const priceControl = row.get('Price');\n        if (qtyControl && priceControl) {\n          const qty = qtyControl.value;\n          const price = priceControl.value;\n          this.total += qty * price;\n          this.cd.markForCheck();\n        }\n      }\n    }\n  }\n  QuoteFinish() {\n    if (this.CustName == null && this.SelectedVal == null) {\n      alert(\"No customer selected, please select a customer and try again!\");\n    } else {\n      this.calculateRunningTotal();\n      const formData = this.quoteForm.value;\n      const FinalformData = {\n        formData,\n        AssocID: this.savedAssoc,\n        CustID: this.SelectedVal,\n        CustomerName: this.CustName,\n        QuoteTotal: this.total,\n        CustomerEmail: this.CustEmail\n      };\n      this.http.post(this.quoteUrl, FinalformData).subscribe({\n        next: data => {\n          // Handle the data\n          alert(\"Quote Submitted!\");\n          localStorage.removeItem('CurrentCustomer');\n          localStorage.removeItem('CurrentCustomerName');\n          location.reload();\n        },\n        error: error => {\n          console.error('Error saving data', error);\n        }\n      });\n    }\n  }\n  /* *********************************************************\n   * This function will check to make sure a sales associate *\n   *   is properly logged in, and it will check if we have a *\n   *   current customer selected.                            *\n   * *********************************************************/\n  Datacheck() {\n    //Stored Customer ID\n    var CustomerSelect = localStorage.getItem('CurrentCustomer');\n    if (CustomerSelect !== null) {\n      this.SelectedVal = JSON.parse(CustomerSelect);\n    }\n    //Stored Customer Name\n    var CustomerSelectName = localStorage.getItem('CurrentCustomerName');\n    if (CustomerSelectName !== null) {\n      this.CustName = CustomerSelectName;\n    }\n    //Stored Associate Name\n    var AssocName = localStorage.getItem('AssocName');\n    if (AssocName !== null) {\n      this.EmpName = JSON.parse(AssocName);\n    }\n    //Stored Admin Flag\n    var AdminFlag = localStorage.getItem('AdminFlag');\n    if (AdminFlag !== null) {\n      this.AdminFlag = JSON.parse(AdminFlag);\n    }\n    //Stored Associate ID\n    var savedAssoc = localStorage.getItem('CurrentAssoc');\n    if (savedAssoc !== null) {\n      this.savedAssoc = JSON.parse(savedAssoc);\n    } else {\n      this.router.navigateByUrl('/');\n      setTimeout(function () {\n        alert(\"Error: User not found, please Login\");\n      }, 200);\n    }\n  }\n}\n_class = QuoteComponent;\n_class.ɵfac = function QuoteComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-quote\"]],\n  decls: 36,\n  vars: 12,\n  consts: [[1, \"Greeting\"], [1, \"SelectCustomer\"], [1, \"select-container\"], [1, \"item\"], [1, \"item2\", 3, \"ngModel\", \"ngModelChange\"], [\"disabled\", \"\", \"hidden\", \"\", 3, \"ngValue\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"email-container\"], [\"type\", \"text\", \"id\", \"cust-email\", \"placeholder\", \"Customer Email\", 1, \"email-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"EntireQuote\"], [3, \"formGroup\"], [\"formArrayName\", \"rows\"], [\"class\", \"row\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"justify-content-center\"], [1, \"QuoteTotal\", \"col-auto\"], [\"class\", \"secretSection\", 4, \"ngIf\"], [1, \"QuoteButtons\"], [1, \"buttons\", 3, \"click\"], [3, \"value\"], [1, \"row\", 3, \"formGroupName\"], [1, \"col\", \"col-lg\"], [1, \"p-3\", \"border\", \"bg-dark\"], [\"formControlName\", \"Item\", \"type\", \"text\", 2, \"width\", \"100%\"], [1, \"col\", \"col-md-auto\"], [\"formControlName\", \"Qty\", \"type\", \"number\"], [\"formControlName\", \"Price\", \"type\", \"number\", \"step\", \"0.01\"], [1, \"secretSection\"], [2, \"border-width\", \"10px\", \"background-color\", \"rgb(0,0,0)\"], [\"formControlName\", \"SecretNote\", \"type\", \"text\", 2, \"width\", \"100%\"]],\n  template: function QuoteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"body\")(2, \"div\", 0)(3, \"h1\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"h4\", 3);\n      i0.ɵɵtext(8, \"Select A Customer:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_select_ngModelChange_9_listener($event) {\n        return ctx.SelectedVal = $event;\n      })(\"ngModelChange\", function QuoteComponent_Template_select_ngModelChange_9_listener() {\n        return ctx.RetriveCustomer();\n      });\n      i0.ɵɵelementStart(10, \"option\", 5);\n      i0.ɵɵtext(11, \"Select a Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, QuoteComponent_option_12_Template, 2, 2, \"option\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 7)(14, \"h4\");\n      i0.ɵɵtext(15, \"Customer Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function QuoteComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.CustEmail = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 9)(18, \"form\", 10)(19, \"div\", 11);\n      i0.ɵɵtemplate(20, QuoteComponent_div_20_Template, 16, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 13)(22, \"div\", 14)(23, \"h4\");\n      i0.ɵɵtext(24, \"Total:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"h5\");\n      i0.ɵɵtext(26);\n      i0.ɵɵpipe(27, \"number\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(28, QuoteComponent_div_28_Template, 6, 0, \"div\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 16)(30, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function QuoteComponent_Template_button_click_30_listener() {\n        return ctx.addRow();\n      });\n      i0.ɵɵtext(31, \"Add Row\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function QuoteComponent_Template_button_click_32_listener() {\n        return ctx.AddNote();\n      });\n      i0.ɵɵtext(33, \"Add Secret Note\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function QuoteComponent_Template_button_click_34_listener() {\n        return ctx.QuoteFinish();\n      });\n      i0.ɵɵtext(35, \"Submit Quote\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Hello \", ctx.EmpName, \"!\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.SelectedVal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngValue\", undefined);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.selectOptions);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.CustEmail);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.quoteForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rowControls);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"$\", i0.ɵɵpipeBind2(27, 9, ctx.total, \"1.2-2\"), \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSecretNote);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i4.DecimalPipe],\n  styles: [\"@media (max-width: 767px) {\\n    .row[_ngcontent-%COMP%] {\\n      display: flex;\\n      flex-direction: column;\\n    }\\n  \\n    .col[_ngcontent-%COMP%] {\\n      width: 100%;\\n    }\\n   \\n    .select-container[_ngcontent-%COMP%], .email-container[_ngcontent-%COMP%]{\\n      width: 100%;\\n      gap: 3%;\\n      padding-bottom: 3%;\\n    }\\n  }\\n\\n  .row[_ngcontent-%COMP%]:first-child{\\n    padding-top: none;\\n  }\\n  .row[_ngcontent-%COMP%] {\\n    border-bottom: 10px solid #000000; \\n    padding-top: 10px;\\n    padding-bottom: 15px; \\n    width: 100%;\\n  }\\n  \\n  .row[_ngcontent-%COMP%]:last-child {\\n    border-bottom: none; \\n\\n  }\\n#Item1[_ngcontent-%COMP%] {\\n    width: 100%;\\n\\n}\\n\\n#Qty[_ngcontent-%COMP%]{\\n    width:60px;\\n}\\n\\n#Price[_ngcontent-%COMP%]{\\n    width:80px;\\n}\\nbody[_ngcontent-%COMP%]{\\n    padding-bottom: 20%;\\n    padding-left: 5%;\\n    padding-right: 5%;\\n}\\n\\n.SelectCustomer[_ngcontent-%COMP%] {\\n  gap: 200px; \\n\\n  padding-bottom: 3%;\\n}\\n\\n\\n\\n.email-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\n  width: 300px;\\n}\\n\\n.Greeting[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content: center;\\n    margin-bottom: 3%;\\n}\\n\\n.QuoteButtons[_ngcontent-%COMP%]{\\n    justify-content: center;\\n    display: flex;\\n    gap: 5%;\\n}\\n\\n.QuoteTotal[_ngcontent-%COMP%]{\\n    display: flex;\\n    align-items: baseline;\\n    gap: 10%;\\n\\n}\\n.buttons[_ngcontent-%COMP%]{\\n    padding: 5px;\\n    border-radius: 10%;\\n}\\n\\n.buttons[_ngcontent-%COMP%]:hover{\\n  background-color: #000000;\\n  color: rgb(255, 255, 255);\\n}\\n\\n.email-input[_ngcontent-%COMP%]{\\n  width: 30%;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXVvdGUvcXVvdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO01BQ0UsYUFBYTtNQUNiLHNCQUFzQjtJQUN4Qjs7SUFFQTtNQUNFLFdBQVc7SUFDYjs7SUFFQTtNQUNFLFdBQVc7TUFDWCxPQUFPO01BQ1Asa0JBQWtCO0lBQ3BCO0VBQ0Y7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLGlDQUFpQztJQUNqQyxpQkFBaUI7SUFDakIsb0JBQW9CO0lBQ3BCLFdBQVc7RUFDYjs7RUFFQTtJQUNFLG1CQUFtQixFQUFFLG9DQUFvQztFQUMzRDtBQUNGO0lBQ0ksV0FBVzs7QUFFZjs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixpQkFBaUI7QUFDckI7O0FBRUE7RUFDRSxVQUFVLEVBQUUsaUNBQWlDO0VBQzdDLGtCQUFrQjtBQUNwQjs7QUFFQSxnREFBZ0Q7QUFDaEQ7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLHVCQUF1QjtJQUN2QixhQUFhO0lBQ2IsT0FBTztBQUNYOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHFCQUFxQjtJQUNyQixRQUFROztBQUVaO0FBQ0E7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLFVBQVU7QUFDWiIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xyXG4gICAgLnJvdyB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB9XHJcbiAgXHJcbiAgICAuY29sIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgIFxyXG4gICAgLnNlbGVjdC1jb250YWluZXIsIC5lbWFpbC1jb250YWluZXJ7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBnYXA6IDMlO1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMyU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucm93OmZpcnN0LWNoaWxke1xyXG4gICAgcGFkZGluZy10b3A6IG5vbmU7XHJcbiAgfVxyXG4gIC5yb3cge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMTBweCBzb2xpZCAjMDAwMDAwOyBcclxuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDE1cHg7IFxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC5yb3c6bGFzdC1jaGlsZCB7XHJcbiAgICBib3JkZXItYm90dG9tOiBub25lOyAvKiBSZW1vdmUgYm9yZGVyIGZyb20gdGhlIGxhc3Qgcm93ICovXHJcbiAgfVxyXG4jSXRlbTEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcblxyXG59XHJcblxyXG4jUXR5e1xyXG4gICAgd2lkdGg6NjBweDtcclxufVxyXG5cclxuI1ByaWNle1xyXG4gICAgd2lkdGg6ODBweDtcclxufVxyXG5ib2R5e1xyXG4gICAgcGFkZGluZy1ib3R0b206IDIwJTtcclxuICAgIHBhZGRpbmctbGVmdDogNSU7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA1JTtcclxufVxyXG5cclxuLlNlbGVjdEN1c3RvbWVyIHtcclxuICBnYXA6IDIwMHB4OyAvKiBTcGFjZSBiZXR3ZWVuIHRoZSBjaGlsZCBkaXZzICovXHJcbiAgcGFkZGluZy1ib3R0b206IDMlO1xyXG59XHJcblxyXG4vKiBBZGp1c3Qgd2lkdGhzIG9yIHNwZWNpZmljIHN0eWxpbmcgYXMgbmVlZGVkICovXHJcbi5lbWFpbC1jb250YWluZXIgaW5wdXR7XHJcbiAgd2lkdGg6IDMwMHB4O1xyXG59XHJcblxyXG4uR3JlZXRpbmd7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzJTtcclxufVxyXG5cclxuLlF1b3RlQnV0dG9uc3tcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGdhcDogNSU7XHJcbn1cclxuXHJcbi5RdW90ZVRvdGFse1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcclxuICAgIGdhcDogMTAlO1xyXG5cclxufVxyXG4uYnV0dG9uc3tcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwJTtcclxufVxyXG5cclxuLmJ1dHRvbnM6aG92ZXJ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcclxuICBjb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xyXG59XHJcblxyXG4uZW1haWwtaW5wdXR7XHJcbiAgd2lkdGg6IDMwJTtcclxufVxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r3","id","ɵɵadvance","ɵɵtextInterpolate1","name","ɵɵelement","i_r5","QuoteComponent","constructor","http","router","formBuilder","cd","selectOptions","showSecretNote","total","quoteUrl","quoteForm","group","rows","array","createRow","SecretNote","ngOnInit","get","subscribe","response","Datacheck","rowControls","controls","addRow","newRow","Item","Qty","Price","calculateRunningTotal","push","console","log","CustEmail","RetriveCustomer","i","length","SelectedVal","CustName","localStorage","setItem","AddNote","row","at","qtyControl","priceControl","qty","value","price","markForCheck","QuoteFinish","alert","formData","FinalformData","AssocID","savedAssoc","CustID","CustomerName","QuoteTotal","CustomerEmail","post","next","data","removeItem","location","reload","error","CustomerSelect","getItem","JSON","parse","CustomerSelectName","AssocName","EmpName","AdminFlag","navigateByUrl","setTimeout","ɵɵdirectiveInject","i1","HttpClient","i2","Router","i3","FormBuilder","ChangeDetectorRef","selectors","decls","vars","consts","template","QuoteComponent_Template","rf","ctx","ɵɵlistener","QuoteComponent_Template_select_ngModelChange_9_listener","$event","ɵɵtemplate","QuoteComponent_option_12_Template","QuoteComponent_Template_input_ngModelChange_16_listener","QuoteComponent_div_20_Template","QuoteComponent_div_28_Template","QuoteComponent_Template_button_click_30_listener","QuoteComponent_Template_button_click_32_listener","QuoteComponent_Template_button_click_34_listener","undefined","ɵɵpipeBind2"],"sources":["C:\\Users\\ledon\\Desktop\\CSCI467-Group-Project\\src\\app\\quote\\quote.component.ts","C:\\Users\\ledon\\Desktop\\CSCI467-Group-Project\\src\\app\\quote\\quote.component.html"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef} from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, FormArray} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-quote',\r\n  templateUrl: './quote.component.html',\r\n  styleUrls: ['./quote.component.css'],\r\n\r\n})\r\n\r\n/* ***************************************************************** \r\n * This is the QuoteComponent, it is responsible for the interface *\r\n *  that allows a sales associate to make a quote                  *\r\n * *****************************************************************/\r\nexport class QuoteComponent implements OnInit{\r\n\r\n  responseFromPHP: any;\r\n  selectOptions: any[] = [];\r\n\r\n  SelectedVal: any;\r\n  CustName: any;\r\n  EmpName: any;\r\n  savedAssoc: any;\r\n  AdminFlag: any;\r\n  CustEmail: any;\r\n\r\n  quoteForm: FormGroup;\r\n  showSecretNote: boolean = false;\r\n  total: number = 0.0;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private formBuilder: FormBuilder, private cd: ChangeDetectorRef) {\r\n    this.quoteForm = this.formBuilder.group({\r\n      rows: this.formBuilder.array([\r\n        this.createRow() // Creates our inital row, so the page isn't empty\r\n      ]),\r\n      SecretNote: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.http.get('https://phpapicsci467.azurewebsites.net/php_script/Customers.php').subscribe((response: any) => {\r\n      this.selectOptions = response;\r\n    });\r\n\r\n    //This will check the localStorage for the Associate ID and if there is a customer currently picked\r\n    this.Datacheck();\r\n  }\r\n\r\n  get rowControls() {\r\n    return (this.quoteForm.get('rows') as FormArray).controls;\r\n  }\r\n\r\n  /* This function will add another row to the current Quote */\r\n  addRow() {\r\n    const newRow = this.formBuilder.group({\r\n      Item: '',\r\n      Qty: 0,\r\n      Price: 0.0,\r\n    });\r\n    this.calculateRunningTotal();\r\n    (this.quoteForm.get('rows') as FormArray).push(newRow);\r\n    console.log(this.CustEmail);\r\n  }\r\n\r\n  private createRow() {\r\n    return this.formBuilder.group({\r\n      Item: '',\r\n      Qty: 0,\r\n      Price: 0.0,\r\n    });\r\n  }\r\n\r\n\r\n  /* **********************************************************\r\n   * This function will aquire the customer that was selected *\r\n   *   and store it for later use.                            *\r\n   * **********************************************************/\r\n  RetriveCustomer() : void{\r\n    for(let i = 0; i < this.selectOptions.length; ++i){\r\n      if(this.selectOptions[i].id == this.SelectedVal){\r\n        this.CustName = this.selectOptions[i].name;\r\n        localStorage.setItem('CurrentCustomer',this.SelectedVal);\r\n        localStorage.setItem('CurrentCustomerName',this.CustName);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  AddNote() : void{\r\n    this.showSecretNote = !this.showSecretNote;\r\n  }\r\n\r\n  /* **********************************************\r\n   * This function will calculate the Quote Total *\r\n   * **********************************************/\r\n  calculateRunningTotal() {\r\n    const rows = this.quoteForm.get('rows') as FormArray;\r\n  \r\n    for (let i = 0; i < rows.length; i++) {\r\n      const row = rows.at(i);\r\n      if (row) {\r\n        const qtyControl = row.get('Qty');\r\n        const priceControl = row.get('Price');\r\n  \r\n        if (qtyControl && priceControl) {\r\n          const qty = qtyControl.value;\r\n          const price = priceControl.value;\r\n          this.total += qty * price;\r\n          this.cd.markForCheck();\r\n        }\r\n      }\r\n    }\r\n  \r\n  }\r\n\r\n\r\n  private quoteUrl = 'https://phpapicsci467.azurewebsites.net/php_script/FinalizeQuote.php';\r\n  QuoteFinish() : any{\r\n    if(this.CustName == null && this.SelectedVal == null){\r\n      alert(\"No customer selected, please select a customer and try again!\");\r\n    }else{\r\n      this.calculateRunningTotal();\r\n      const formData = this.quoteForm.value;\r\n      const FinalformData = {\r\n        formData,\r\n        AssocID: this.savedAssoc,\r\n        CustID: this.SelectedVal,\r\n        CustomerName: this.CustName,\r\n        QuoteTotal: this.total,\r\n        CustomerEmail: this.CustEmail\r\n      };\r\n  \r\n      this.http.post(this.quoteUrl, FinalformData).subscribe({        \r\n        next: (data: any) => {\r\n        // Handle the data\r\n        alert(\"Quote Submitted!\");\r\n        localStorage.removeItem('CurrentCustomer');\r\n        localStorage.removeItem('CurrentCustomerName');\r\n        location.reload();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error saving data', error);\r\n        }\r\n      });\r\n    }\r\n}\r\n\r\n  /* *********************************************************\r\n   * This function will check to make sure a sales associate *\r\n   *   is properly logged in, and it will check if we have a *\r\n   *   current customer selected.                            *\r\n   * *********************************************************/\r\n  Datacheck(): void{\r\n    //Stored Customer ID\r\n    var CustomerSelect = localStorage.getItem('CurrentCustomer');\r\n    if(CustomerSelect !== null){\r\n      this.SelectedVal = JSON.parse(CustomerSelect);\r\n    }\r\n    //Stored Customer Name\r\n    var CustomerSelectName = localStorage.getItem('CurrentCustomerName');\r\n    if(CustomerSelectName !== null){\r\n      this.CustName = CustomerSelectName;\r\n    }\r\n    //Stored Associate Name\r\n    var AssocName = localStorage.getItem('AssocName');\r\n    if(AssocName !== null){\r\n      this.EmpName = JSON.parse(AssocName);\r\n    }\r\n    \r\n    //Stored Admin Flag\r\n    var AdminFlag = localStorage.getItem('AdminFlag');\r\n    if(AdminFlag !== null){\r\n      this.AdminFlag = JSON.parse(AdminFlag);\r\n    }\r\n\r\n    //Stored Associate ID\r\n    var savedAssoc = localStorage.getItem('CurrentAssoc');\r\n    if(savedAssoc !== null){\r\n      this.savedAssoc = JSON.parse(savedAssoc);\r\n    }else{\r\n      this.router.navigateByUrl('/');\r\n      setTimeout(function(){\r\n        alert(\"Error: User not found, please Login\");\r\n      }, 200);\r\n    }\r\n  }\r\n}\r\n","<html>\r\n  <body>\r\n    <div class=\"Greeting\">\r\n      <h1>Hello {{ EmpName }}!</h1>\r\n    </div>\r\n    <div class=\"SelectCustomer\">\r\n      <div class=\"select-container\">\r\n        <h4 class=\"item\">Select A Customer:</h4>\r\n        <select class=\"item2\" [(ngModel)]=\"SelectedVal\" (ngModelChange)=\"RetriveCustomer()\">\r\n          <option [ngValue]=\"undefined\" disabled hidden>Select a Customer</option>\r\n          <option *ngFor=\"let option of selectOptions\" [value]=\"option.id\" >{{ option.name }} </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"email-container\">\r\n        <h4>Customer Email:</h4>\r\n        <input class=\"email-input\" type=\"text\" id=\"cust-email\" [(ngModel)]=\"CustEmail\" placeholder=\"Customer Email\">\r\n      </div>\r\n    </div>\r\n\r\n    <div class = \"EntireQuote\">\r\n      <form [formGroup]=\"quoteForm\">\r\n        <div formArrayName=\"rows\">\r\n          <div class=\"row\" *ngFor=\"let control of rowControls; let i = index\" [formGroupName]=\"i\">\r\n            <div class=\"col col-lg\">\r\n              <h4>Description</h4>\r\n              <div class=\"p-3 border bg-dark\">\r\n                <input style=\"width:100%;\" formControlName=\"Item\" type=\"text\">\r\n              </div>\r\n            </div>\r\n            <div class=\"col col-md-auto\">\r\n              <h4>Qty</h4>\r\n              <div class=\"p-3 border bg-dark\">\r\n                <input formControlName=\"Qty\" type=\"number\">\r\n              </div>\r\n            </div>\r\n            <div class=\"col col-md-auto\">\r\n              <h4>Price</h4>\r\n              <div class=\"p-3 border bg-dark\">\r\n                <input formControlName=\"Price\" type=\"number\" step=\"0.01\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n          \r\n        <div class=\"row justify-content-center\">           \r\n          <div class=\"QuoteTotal col-auto\">\r\n            <h4>Total:</h4>\r\n            <h5>${{ total | number: '1.2-2'}}</h5>\r\n          </div>\r\n        </div>\r\n        <div class=\"secretSection\" *ngIf=\"showSecretNote\">\r\n          <hr style=\"border-width:10px; background-color:rgb(0,0,0)\">\r\n          <h4>Secret Note</h4>\r\n          <div class=\"p-3 border bg-dark\">\r\n            <input style=\"width:100%;\" formControlName=\"SecretNote\" type=\"text\">\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"QuoteButtons\">\r\n      <button (click)=\"addRow()\" class=\"buttons\">Add Row</button>\r\n      <button (click)=\"AddNote()\" class=\"buttons\">Add Secret Note</button>\r\n      <button (click)=\"QuoteFinish()\" class=\"buttons\">Submit Quote</button>\r\n    </div>\r\n    \r\n  </body>\r\n</html>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}